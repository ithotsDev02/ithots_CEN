{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport actions from \"./actions\"; // import products from \"../../demoData/cart.json\";\n\nimport successNotification from \"../../components/notification/successNotification\";\nconst {\n  cartDataBegin,\n  cartDataSuccess,\n  cartDataErr,\n  cartUpdateBegin,\n  cartUpdateSuccess,\n  cartUpdateErr,\n  cartDeleteBegin,\n  cartDeleteSuccess,\n  cartDeleteErr\n} = actions; // const cartGetData = () => {\n//   return async (dispatch) => {\n//     try {\n//       dispatch(cartDataBegin());\n//       dispatch(cartDataSuccess(products));\n//     } catch (err) {\n//       dispatch(cartDataErr(err));\n//     }\n//   };\n// };\n\nconst cartUpdateQuantity = data => {\n  return async dispatch => {\n    try {\n      dispatch(cartUpdateBegin()); // const data = cartData.map((item) => {\n      //   if (item.id === id) item.quantity = quantity;\n      //   return item;\n      // });\n\n      dispatch(cartUpdateSuccess(data)); // successNotification(\"Course added to cart!\");\n    } catch (err) {\n      dispatch(cartUpdateErr(err));\n    }\n  };\n};\n\nconst emptyCart = () => {\n  return async dispatch => {\n    try {\n      dispatch(cartDeleteBegin()); // const data = chartData.filter((item) => item.id !== id);\n\n      setTimeout(() => {\n        dispatch(cartUpdateSuccess([]));\n      }, 500);\n    } catch (err) {\n      dispatch(cartDeleteErr(err));\n    }\n  };\n};\n\nconst cartDelete = data => {\n  return async dispatch => {\n    try {\n      dispatch(cartDeleteBegin()); // const data = chartData.filter((item) => item.id !== id);\n\n      setTimeout(() => {\n        dispatch(cartDeleteSuccess(data));\n        window.location = \"/home\";\n        setTimeout(() => {\n          successNotification(\"Course removed from your cart!\");\n        }, 1500);\n      }, 500);\n    } catch (err) {\n      dispatch(cartDeleteErr(err));\n    }\n  };\n};\n\nexport { cartUpdateQuantity, cartDelete, emptyCart };\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(cartDataBegin, \"cartDataBegin\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/redux/cart/actionCreator.js\");\n  reactHotLoader.register(cartDataSuccess, \"cartDataSuccess\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/redux/cart/actionCreator.js\");\n  reactHotLoader.register(cartDataErr, \"cartDataErr\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/redux/cart/actionCreator.js\");\n  reactHotLoader.register(cartUpdateBegin, \"cartUpdateBegin\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/redux/cart/actionCreator.js\");\n  reactHotLoader.register(cartUpdateSuccess, \"cartUpdateSuccess\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/redux/cart/actionCreator.js\");\n  reactHotLoader.register(cartUpdateErr, \"cartUpdateErr\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/redux/cart/actionCreator.js\");\n  reactHotLoader.register(cartDeleteBegin, \"cartDeleteBegin\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/redux/cart/actionCreator.js\");\n  reactHotLoader.register(cartDeleteSuccess, \"cartDeleteSuccess\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/redux/cart/actionCreator.js\");\n  reactHotLoader.register(cartDeleteErr, \"cartDeleteErr\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/redux/cart/actionCreator.js\");\n  reactHotLoader.register(cartUpdateQuantity, \"cartUpdateQuantity\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/redux/cart/actionCreator.js\");\n  reactHotLoader.register(emptyCart, \"emptyCart\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/redux/cart/actionCreator.js\");\n  reactHotLoader.register(cartDelete, \"cartDelete\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/redux/cart/actionCreator.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/ithotsdev02/Downloads/mydownloads/CEN/src/redux/cart/actionCreator.js"],"names":["actions","successNotification","cartDataBegin","cartDataSuccess","cartDataErr","cartUpdateBegin","cartUpdateSuccess","cartUpdateErr","cartDeleteBegin","cartDeleteSuccess","cartDeleteErr","cartUpdateQuantity","data","dispatch","err","emptyCart","setTimeout","cartDelete","window","location"],"mappings":";;;;;;;;;AAAA,OAAOA,OAAP,MAAoB,WAApB,C,CACA;;AACA,OAAOC,mBAAP,MAAgC,mDAAhC;AAEA,MAAM;AACJC,EAAAA,aADI;AAEJC,EAAAA,eAFI;AAGJC,EAAAA,WAHI;AAKJC,EAAAA,eALI;AAMJC,EAAAA,iBANI;AAOJC,EAAAA,aAPI;AASJC,EAAAA,eATI;AAUJC,EAAAA,iBAVI;AAWJC,EAAAA;AAXI,IAYFV,OAZJ,C,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMW,kBAAkB,GAAIC,IAAD,IAAU;AACnC,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACFA,MAAAA,QAAQ,CAACR,eAAe,EAAhB,CAAR,CADE,CAEF;AACA;AACA;AACA;;AACAQ,MAAAA,QAAQ,CAACP,iBAAiB,CAACM,IAAD,CAAlB,CAAR,CANE,CAOF;AACD,KARD,CAQE,OAAOE,GAAP,EAAY;AACZD,MAAAA,QAAQ,CAACN,aAAa,CAACO,GAAD,CAAd,CAAR;AACD;AACF,GAZD;AAaD,CAdD;;AAeA,MAAMC,SAAS,GAAG,MAAM;AACtB,SAAO,MAAOF,QAAP,IAAoB;AACzB,QAAI;AACFA,MAAAA,QAAQ,CAACL,eAAe,EAAhB,CAAR,CADE,CAEF;;AACAQ,MAAAA,UAAU,CAAC,MAAM;AACfH,QAAAA,QAAQ,CAACP,iBAAiB,CAAC,EAAD,CAAlB,CAAR;AACD,OAFS,EAEP,GAFO,CAAV;AAGD,KAND,CAME,OAAOQ,GAAP,EAAY;AACZD,MAAAA,QAAQ,CAACH,aAAa,CAACI,GAAD,CAAd,CAAR;AACD;AACF,GAVD;AAWD,CAZD;;AAaA,MAAMG,UAAU,GAAIL,IAAD,IAAU;AAC3B,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACFA,MAAAA,QAAQ,CAACL,eAAe,EAAhB,CAAR,CADE,CAEF;;AACAQ,MAAAA,UAAU,CAAC,MAAM;AACfH,QAAAA,QAAQ,CAACJ,iBAAiB,CAACG,IAAD,CAAlB,CAAR;AACAM,QAAAA,MAAM,CAACC,QAAP,GAAkB,OAAlB;AAEAH,QAAAA,UAAU,CAAC,MAAM;AACff,UAAAA,mBAAmB,CAAC,gCAAD,CAAnB;AACD,SAFS,EAEP,IAFO,CAAV;AAID,OARS,EAQP,GARO,CAAV;AASD,KAZD,CAYE,OAAOa,GAAP,EAAY;AACZD,MAAAA,QAAQ,CAACH,aAAa,CAACI,GAAD,CAAd,CAAR;AACD;AACF,GAhBD;AAiBD,CAlBD;;AAoBA,SAASH,kBAAT,EAA6BM,UAA7B,EAAyCF,SAAzC;;;;;;;;;;0BAxEEb,a;0BACAC,e;0BACAC,W;0BAEAC,e;0BACAC,iB;0BACAC,a;0BAEAC,e;0BACAC,iB;0BACAC,a;0BAcIC,kB;0BAeAI,S;0BAaAE,U","sourcesContent":["import actions from \"./actions\";\n// import products from \"../../demoData/cart.json\";\nimport successNotification from \"../../components/notification/successNotification\";\n\nconst {\n  cartDataBegin,\n  cartDataSuccess,\n  cartDataErr,\n\n  cartUpdateBegin,\n  cartUpdateSuccess,\n  cartUpdateErr,\n\n  cartDeleteBegin,\n  cartDeleteSuccess,\n  cartDeleteErr,\n} = actions;\n\n// const cartGetData = () => {\n//   return async (dispatch) => {\n//     try {\n//       dispatch(cartDataBegin());\n//       dispatch(cartDataSuccess(products));\n//     } catch (err) {\n//       dispatch(cartDataErr(err));\n//     }\n//   };\n// };\n\nconst cartUpdateQuantity = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(cartUpdateBegin());\n      // const data = cartData.map((item) => {\n      //   if (item.id === id) item.quantity = quantity;\n      //   return item;\n      // });\n      dispatch(cartUpdateSuccess(data));\n      // successNotification(\"Course added to cart!\");\n    } catch (err) {\n      dispatch(cartUpdateErr(err));\n    }\n  };\n};\nconst emptyCart = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(cartDeleteBegin());\n      // const data = chartData.filter((item) => item.id !== id);\n      setTimeout(() => {\n        dispatch(cartUpdateSuccess([]));\n      }, 500);\n    } catch (err) {\n      dispatch(cartDeleteErr(err));\n    }\n  };\n};\nconst cartDelete = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(cartDeleteBegin());\n      // const data = chartData.filter((item) => item.id !== id);\n      setTimeout(() => {\n        dispatch(cartDeleteSuccess(data));\n        window.location = \"/home\";\n\n        setTimeout(() => {\n          successNotification(\"Course removed from your cart!\");\n        }, 1500);\n\n      }, 500);\n    } catch (err) {\n      dispatch(cartDeleteErr(err));\n    }\n  };\n};\n\nexport { cartUpdateQuantity, cartDelete, emptyCart };\n"]},"metadata":{},"sourceType":"module"}