{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nvar _jsxFileName = \"/home/oem/Downloads/mydownloads/new_strikingDash/ithotstechnology-striking-dash-dd179455c0fe/src/container/calendar/index.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\n// --Lokesh\nimport React, { useState, useEffect } from \"react\";\nimport { Main } from \"../styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Cards } from \"../../components/cards/frame/cards-frame\";\nimport { CustomCalender } from \"../../components/calender/calender\";\nimport axiosInstance from \"../../config/axoisconfig\";\nimport { editBatch, deleteBatch } from \"../../redux/course/actionCreator\";\nimport moment from \"moment\";\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const [visible, setVisible] = useState(false);\n  const [isEventEditMode, setisEventEditMode] = useState(false);\n  const [allBatches, setallBatches] = useState([]);\n  const [clickedEvent, setclickedEvent] = useState(\"\");\n  const [currentBatchInfo, setcurrentBatchInfo] = useState({});\n  const [batch_type, setbatch_type] = useState(\"value1\");\n  const [batch_day, setbatch_day] = useState([]);\n  const [end_date, setend_date] = useState(\"\");\n  const [end_time, setend_time] = useState(\"\");\n  const [enroll_last_date, setenroll_last_date] = useState(\"\");\n  const [name, setname] = useState(\"\");\n  const [price, setprice] = useState(\"\");\n  const [start_date, setstart_date] = useState(\"\");\n  const [start_time, setstart_time] = useState(\"\");\n  const [title, settitle] = useState(\"\");\n  const [duration, setduration] = useState(\"\");\n  const [monthprice, setmonthprice] = useState(\"\");\n  const [eventStartEndDate, seteventStartEndDate] = useState(\"\");\n  const [eventTimeSlot, seteventTimeSlot] = useState(\"\");\n  const [participants_size, setparticipants_size] = useState(0);\n  const [participants_total_size, setparticipants_total_size] = useState(0);\n  useEffect(() => {\n    if (clickedEvent !== \"\") {\n      getBatchInfo(clickedEvent.id);\n    }\n  }, [clickedEvent]);\n  useEffect(() => {\n    getBatches();\n  }, []);\n  useEffect(() => {\n    if (Object.keys(currentBatchInfo).length > 0) {\n      setisEventEditMode(true);\n      setVisible(true);\n      setbatch_type(currentBatchInfo.batch_type);\n      setbatch_day(currentBatchInfo.batch_day);\n      setend_date(currentBatchInfo.end_date);\n      setend_time(currentBatchInfo.end_time);\n      setenroll_last_date(currentBatchInfo.enroll_last_date);\n      setname(currentBatchInfo.name);\n      setprice(currentBatchInfo.total_price);\n      setparticipants_size(currentBatchInfo.participants_size);\n      setparticipants_total_size(currentBatchInfo.participants_total_size);\n      setstart_date(currentBatchInfo.start_date);\n      setstart_time(currentBatchInfo.start_time);\n      settitle(currentBatchInfo.title);\n      setmonthprice(currentBatchInfo.price);\n      setduration(currentBatchInfo.total_duration);\n    }\n  }, [currentBatchInfo]);\n\n  const getBatchInfo = eventId => {\n    if (eventId !== \"\") {\n      let url = \"https://api.esculae.com/api/v1/course/batch/\" + eventId;\n      axiosInstance.get(url, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(resp => {\n        setcurrentBatchInfo(resp.data);\n      }).catch(err => {\n        errorNotification(\"Error in getting the batch information\");\n      });\n    }\n  };\n\n  const getBatches = () => {\n    let url = `https://api.esculae.com/api/v1/course/batch?created_by=${localStorage.currentUserInfo}`;\n    axiosInstance.get(url, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => {\n      setallBatches(resp.data);\n    }).catch(err => {\n      console.log(\"Error in getting batches\", err);\n    });\n  };\n\n  const updateBatch = () => {\n    if (title !== \"\" && batch_day.length > 0 && start_date !== \"\" && start_time !== \"\" && enroll_last_date !== \"\" && name !== \"\" && price !== \"\") {\n      let startDate = \"\";\n      let endDate = \"\";\n      let sTime = \"\";\n      let eTime = \"\";\n\n      if (eventStartEndDate === \"\") {\n        //no update made by useer\n        startDate = currentBatchInfo.start_date;\n        endDate = currentBatchInfo.end_date;\n      } else {\n        //user changed date, manipualte the date accordingly\n        startDate = eventStartEndDate[0].format(\"MM/DD/YYYY\");\n        endDate = eventStartEndDate[1].format(\"MM/DD/YYYY\");\n      }\n\n      if (eventTimeSlot === \"\") {\n        sTime = currentBatchInfo.start_time;\n        eTime = currentBatchInfo.end_time;\n      } else {\n        sTime = eventTimeSlot[0].format(\"HH:mm\");\n        eTime = eventTimeSlot[1].format(\"HH:mm\");\n      }\n\n      let data = {\n        CourseId: currentBatchInfo.CourseId,\n        name: name,\n        title: title,\n        sub_title: null,\n        batch_type: batch_type,\n        enroll_last_date: moment(enroll_last_date).format(\"MM/DD/YYYY\"),\n        price: monthprice,\n        participants_size: participants_size,\n        start_date: startDate,\n        end_date: endDate,\n        batch_day: batch_day,\n        total_price: price,\n        total_duration: duration,\n        start_time: sTime,\n        end_time: eTime\n      };\n      dispatch(editBatch(currentBatchInfo.id, data));\n    }\n  };\n\n  const removeBatch = () => {\n    dispatch(deleteBatch(clickedEvent.id));\n  };\n\n  return /*#__PURE__*/React.createElement(Main, {\n    style: {\n      marginTop: \"-3%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Cards, {\n    title: \"Calendar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Row, {\n    gutter: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    lg: 24,\n    xs: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomCalender, {\n    visible: visible,\n    currentBatchInfo: currentBatchInfo,\n    isEventEditMode: isEventEditMode,\n    seteventTimeSlot: seteventTimeSlot,\n    setclickedEvent: setclickedEvent,\n    setVisible: setVisible,\n    eventStartEndDate: eventStartEndDate,\n    seteventStartEndDate: seteventStartEndDate,\n    setisEventEditMode: setisEventEditMode,\n    allBatches: allBatches,\n    settitle: settitle,\n    setbatch_type: setbatch_type,\n    setbatch_day: setbatch_day,\n    setend_date: setend_date,\n    setend_time: setend_time,\n    setenroll_last_date: setenroll_last_date,\n    setname: setname,\n    setprice: setprice,\n    setstart_date: setstart_date,\n    setstart_time: setstart_time,\n    setduration: setduration,\n    setmonthprice: setmonthprice,\n    title: title,\n    start_date: start_date,\n    start_time: start_time,\n    duration: duration,\n    monthprice: monthprice,\n    batch_type: batch_type,\n    batch_day: batch_day,\n    end_date: end_date,\n    end_time: end_time,\n    enroll_last_date: enroll_last_date,\n    name: name,\n    price: price,\n    editBatch: updateBatch,\n    deleteBatch: removeBatch,\n    participants_size: participants_size,\n    participants_total_size: participants_total_size,\n    setparticipants_size: setparticipants_size,\n    setparticipants_total_size: setparticipants_total_size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  })))));\n};\n\n__signature__(Dashboard, \"useDispatch{dispatch}\\nuseState{[visible, setVisible](false)}\\nuseState{[isEventEditMode, setisEventEditMode](false)}\\nuseState{[allBatches, setallBatches]([])}\\nuseState{[clickedEvent, setclickedEvent](\\\"\\\")}\\nuseState{[currentBatchInfo, setcurrentBatchInfo]({})}\\nuseState{[batch_type, setbatch_type](\\\"value1\\\")}\\nuseState{[batch_day, setbatch_day]([])}\\nuseState{[end_date, setend_date](\\\"\\\")}\\nuseState{[end_time, setend_time](\\\"\\\")}\\nuseState{[enroll_last_date, setenroll_last_date](\\\"\\\")}\\nuseState{[name, setname](\\\"\\\")}\\nuseState{[price, setprice](\\\"\\\")}\\nuseState{[start_date, setstart_date](\\\"\\\")}\\nuseState{[start_time, setstart_time](\\\"\\\")}\\nuseState{[title, settitle](\\\"\\\")}\\nuseState{[duration, setduration](\\\"\\\")}\\nuseState{[monthprice, setmonthprice](\\\"\\\")}\\nuseState{[eventStartEndDate, seteventStartEndDate](\\\"\\\")}\\nuseState{[eventTimeSlot, seteventTimeSlot](\\\"\\\")}\\nuseState{[participants_size, setparticipants_size](0)}\\nuseState{[participants_total_size, setparticipants_total_size](0)}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\", () => [useDispatch]);\n\nconst _default = Dashboard;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Dashboard, \"Dashboard\", \"/home/oem/Downloads/mydownloads/new_strikingDash/ithotstechnology-striking-dash-dd179455c0fe/src/container/calendar/index.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/oem/Downloads/mydownloads/new_strikingDash/ithotstechnology-striking-dash-dd179455c0fe/src/container/calendar/index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/oem/Downloads/mydownloads/new_strikingDash/ithotstechnology-striking-dash-dd179455c0fe/src/container/calendar/index.js"],"names":["React","useState","useEffect","Main","useDispatch","useSelector","Cards","CustomCalender","axiosInstance","editBatch","deleteBatch","moment","Dashboard","dispatch","visible","setVisible","isEventEditMode","setisEventEditMode","allBatches","setallBatches","clickedEvent","setclickedEvent","currentBatchInfo","setcurrentBatchInfo","batch_type","setbatch_type","batch_day","setbatch_day","end_date","setend_date","end_time","setend_time","enroll_last_date","setenroll_last_date","name","setname","price","setprice","start_date","setstart_date","start_time","setstart_time","title","settitle","duration","setduration","monthprice","setmonthprice","eventStartEndDate","seteventStartEndDate","eventTimeSlot","seteventTimeSlot","participants_size","setparticipants_size","participants_total_size","setparticipants_total_size","getBatchInfo","id","getBatches","Object","keys","length","total_price","total_duration","eventId","url","get","headers","then","resp","data","catch","err","errorNotification","localStorage","currentUserInfo","console","log","updateBatch","startDate","endDate","sTime","eTime","format","CourseId","sub_title","removeBatch","marginTop"],"mappings":"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","sourcesContent":["// --Lokesh\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col } from \"antd\";\nimport { Main } from \"../styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Cards } from \"../../components/cards/frame/cards-frame\";\nimport { CustomCalender } from \"../../components/calender/calender\";\nimport axiosInstance from \"../../config/axoisconfig\";\nimport { editBatch, deleteBatch } from \"../../redux/course/actionCreator\";\nimport moment from \"moment\";\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const [visible, setVisible] = useState(false);\n  const [isEventEditMode, setisEventEditMode] = useState(false);\n  const [allBatches, setallBatches] = useState([]);\n  const [clickedEvent, setclickedEvent] = useState(\"\");\n  const [currentBatchInfo, setcurrentBatchInfo] = useState({});\n  const [batch_type, setbatch_type] = useState(\"value1\");\n  const [batch_day, setbatch_day] = useState([]);\n  const [end_date, setend_date] = useState(\"\");\n  const [end_time, setend_time] = useState(\"\");\n  const [enroll_last_date, setenroll_last_date] = useState(\"\");\n  const [name, setname] = useState(\"\");\n  const [price, setprice] = useState(\"\");\n  const [start_date, setstart_date] = useState(\"\");\n  const [start_time, setstart_time] = useState(\"\");\n  const [title, settitle] = useState(\"\");\n  const [duration, setduration] = useState(\"\");\n  const [monthprice, setmonthprice] = useState(\"\");\n  const [eventStartEndDate, seteventStartEndDate] = useState(\"\");\n  const [eventTimeSlot, seteventTimeSlot] = useState(\"\");\n  const [participants_size, setparticipants_size] = useState(0);\n  const [participants_total_size, setparticipants_total_size] = useState(0);\n\n  useEffect(() => {\n    if (clickedEvent !== \"\") {\n      getBatchInfo(clickedEvent.id);\n    }\n  }, [clickedEvent]);\n  useEffect(() => {\n    getBatches();\n  }, []);\n\n  useEffect(() => {\n    if (Object.keys(currentBatchInfo).length > 0) {\n      setisEventEditMode(true);\n      setVisible(true);\n      setbatch_type(currentBatchInfo.batch_type);\n      setbatch_day(currentBatchInfo.batch_day);\n      setend_date(currentBatchInfo.end_date);\n      setend_time(currentBatchInfo.end_time);\n      setenroll_last_date(currentBatchInfo.enroll_last_date);\n      setname(currentBatchInfo.name);\n      setprice(currentBatchInfo.total_price);\n      setparticipants_size(currentBatchInfo.participants_size);\n      setparticipants_total_size(currentBatchInfo.participants_total_size);\n      setstart_date(currentBatchInfo.start_date);\n      setstart_time(currentBatchInfo.start_time);\n      settitle(currentBatchInfo.title);\n      setmonthprice(currentBatchInfo.price);\n      setduration(currentBatchInfo.total_duration);\n    }\n  }, [currentBatchInfo]);\n  const getBatchInfo = (eventId) => {\n    if (eventId !== \"\") {\n      let url = \"https://api.esculae.com/api/v1/course/batch/\" + eventId;\n      axiosInstance\n        .get(url, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n        .then((resp) => {\n          setcurrentBatchInfo(resp.data);\n        })\n        .catch((err) => {\n          errorNotification(\"Error in getting the batch information\");\n        });\n    }\n  };\n  const getBatches = () => {\n    let url = `https://api.esculae.com/api/v1/course/batch?created_by=${localStorage.currentUserInfo}`;\n    axiosInstance\n      .get(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((resp) => {\n        setallBatches(resp.data);\n      })\n      .catch((err) => {\n        console.log(\"Error in getting batches\", err);\n      });\n  };\n  const updateBatch = () => {\n    if (\n      title !== \"\" &&\n      batch_day.length > 0 &&\n      start_date !== \"\" &&\n      start_time !== \"\" &&\n      enroll_last_date !== \"\" &&\n      name !== \"\" &&\n      price !== \"\"\n    ) {\n      let startDate = \"\";\n      let endDate = \"\";\n      let sTime = \"\";\n      let eTime = \"\";\n      if (eventStartEndDate === \"\") {\n        //no update made by useer\n        startDate = currentBatchInfo.start_date;\n        endDate = currentBatchInfo.end_date;\n      } else {\n        //user changed date, manipualte the date accordingly\n        startDate = eventStartEndDate[0].format(\"MM/DD/YYYY\");\n        endDate = eventStartEndDate[1].format(\"MM/DD/YYYY\");\n      }\n      if (eventTimeSlot === \"\") {\n        sTime = currentBatchInfo.start_time;\n        eTime = currentBatchInfo.end_time;\n      } else {\n        sTime = eventTimeSlot[0].format(\"HH:mm\");\n        eTime = eventTimeSlot[1].format(\"HH:mm\");\n      }\n      let data = {\n        CourseId: currentBatchInfo.CourseId,\n        name: name,\n        title: title,\n        sub_title: null,\n        batch_type: batch_type,\n        enroll_last_date: moment(enroll_last_date).format(\"MM/DD/YYYY\"),\n        price: monthprice,\n        participants_size: participants_size,\n        start_date: startDate,\n        end_date: endDate,\n        batch_day: batch_day,\n        total_price: price,\n        total_duration: duration,\n        start_time: sTime,\n        end_time: eTime,\n      };\n      dispatch(editBatch(currentBatchInfo.id, data));\n    }\n  };\n  const removeBatch = () => {\n    dispatch(deleteBatch(clickedEvent.id));\n  };\n  return (\n    <Main style={{ marginTop: \"-3%\" }}>\n      <Cards title=\"Calendar\">\n        <Row gutter={25}>\n          <Col lg={24} xs={24}>\n            <CustomCalender\n              visible={visible}\n              currentBatchInfo={currentBatchInfo}\n              isEventEditMode={isEventEditMode}\n              seteventTimeSlot={seteventTimeSlot}\n              setclickedEvent={setclickedEvent}\n              setVisible={setVisible}\n              eventStartEndDate={eventStartEndDate}\n              seteventStartEndDate={seteventStartEndDate}\n              setisEventEditMode={setisEventEditMode}\n              allBatches={allBatches}\n              settitle={settitle}\n              setbatch_type={setbatch_type}\n              setbatch_day={setbatch_day}\n              setend_date={setend_date}\n              setend_time={setend_time}\n              setenroll_last_date={setenroll_last_date}\n              setname={setname}\n              setprice={setprice}\n              setstart_date={setstart_date}\n              setstart_time={setstart_time}\n              setduration={setduration}\n              setmonthprice={setmonthprice}\n              title={title}\n              start_date={start_date}\n              start_time={start_time}\n              duration={duration}\n              monthprice={monthprice}\n              batch_type={batch_type}\n              batch_day={batch_day}\n              end_date={end_date}\n              end_time={end_time}\n              enroll_last_date={enroll_last_date}\n              name={name}\n              price={price}\n              editBatch={updateBatch}\n              deleteBatch={removeBatch}\n              participants_size={participants_size}\n              participants_total_size={participants_total_size}\n              setparticipants_size={setparticipants_size}\n              setparticipants_total_size={setparticipants_total_size}\n            />\n          </Col>\n        </Row>\n      </Cards>\n    </Main>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}