{"ast":null,"code":"import \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"/home/oem/Downloads/mydownloads/new_strikingDash/ithotstechnology-striking-dash-dd179455c0fe/src/components/tags/index.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { PlusOutlined } from '@ant-design/icons';\nimport React from 'react';\nimport './style.css';\n\nclass EditableTagGroup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tags: this.props.tag || [],\n      inputVisible: false,\n      inputValue: '',\n      editInputIndex: -1,\n      editInputValue: ''\n    };\n\n    this.handleClose = removedTag => {\n      const tags = this.state.tags.filter(tag => tag !== removedTag);\n      this.setState({\n        tags\n      });\n    };\n\n    this.showInput = () => {\n      this.setState({\n        inputVisible: true\n      }, () => this.input.focus());\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.handleInputConfirm = () => {\n      const {\n        inputValue\n      } = this.state;\n      let {\n        tags\n      } = this.state;\n\n      if (inputValue && tags.indexOf(inputValue) === -1) {\n        tags = [...tags, inputValue];\n      }\n\n      console.log(tags);\n      this.setState({\n        tags,\n        inputVisible: false,\n        inputValue: ''\n      });\n      this.props.setTags(tags);\n    };\n\n    this.handleEditInputChange = e => {\n      this.setState({\n        editInputValue: e.target.value\n      });\n    };\n\n    this.handleEditInputConfirm = () => {\n      this.setState(({\n        tags,\n        editInputIndex,\n        editInputValue\n      }) => {\n        const newTags = [...tags];\n        newTags[editInputIndex] = editInputValue;\n        return {\n          tags: newTags,\n          editInputIndex: -1,\n          editInputValue: ''\n        };\n      });\n      this.props.setTags(this.state.tags);\n    };\n\n    this.saveInputRef = input => {\n      this.input = input;\n    };\n\n    this.saveEditInputRef = input => {\n      this.editInput = input;\n    };\n  }\n\n  render() {\n    const {\n      tags,\n      inputVisible,\n      inputValue,\n      editInputIndex,\n      editInputValue\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, tags.map((tag, index) => {\n      if (editInputIndex === index) {\n        return /*#__PURE__*/React.createElement(_Input, {\n          ref: this.saveEditInputRef,\n          key: tag,\n          size: \"small\",\n          className: \"tag-input\",\n          value: editInputValue,\n          onChange: this.handleEditInputChange,\n          onBlur: this.handleEditInputConfirm,\n          onPressEnter: this.handleEditInputConfirm,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }\n        });\n      }\n\n      const isLongTag = tag.length > 20;\n      const tagElem = /*#__PURE__*/React.createElement(_Tag, {\n        className: \"edit-tag\",\n        key: tag,\n        closable: index !== 0,\n        onClose: () => this.handleClose(tag),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        onDoubleClick: e => {\n          if (index !== 0) {\n            this.setState({\n              editInputIndex: index,\n              editInputValue: tag\n            }, () => {\n              this.editInput.focus();\n            });\n            e.preventDefault();\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }, isLongTag ? `${tag.slice(0, 20)}...` : tag));\n      return isLongTag ? /*#__PURE__*/React.createElement(_Tooltip, {\n        title: tag,\n        key: tag,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, tagElem) : tagElem;\n    }), inputVisible && /*#__PURE__*/React.createElement(_Input, {\n      ref: this.saveInputRef,\n      type: \"text\",\n      size: \"small\",\n      className: \"tag-input\",\n      value: inputValue,\n      onChange: this.handleInputChange,\n      onBlur: this.handleInputConfirm,\n      onPressEnter: this.handleInputConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }), !inputVisible && /*#__PURE__*/React.createElement(_Tag, {\n      className: \"site-tag-plus\",\n      onClick: this.showInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }), \" New Tag\"));\n  }\n\n  // @ts-ignore\n  __reactstandin__regenerateByEval(key, code) {\n    // @ts-ignore\n    this[key] = eval(code);\n  }\n\n}\n\nconst _default = EditableTagGroup;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(EditableTagGroup, \"EditableTagGroup\", \"/home/oem/Downloads/mydownloads/new_strikingDash/ithotstechnology-striking-dash-dd179455c0fe/src/components/tags/index.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/oem/Downloads/mydownloads/new_strikingDash/ithotstechnology-striking-dash-dd179455c0fe/src/components/tags/index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/oem/Downloads/mydownloads/new_strikingDash/ithotstechnology-striking-dash-dd179455c0fe/src/components/tags/index.js"],"names":["PlusOutlined","React","EditableTagGroup","Component","state","tags","props","tag","inputVisible","inputValue","editInputIndex","editInputValue","handleClose","removedTag","filter","setState","showInput","input","focus","handleInputChange","e","target","value","handleInputConfirm","indexOf","console","log","setTags","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","render","map","index","isLongTag","length","tagElem","preventDefault","slice"],"mappings":"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","sourcesContent":["import { Tag, Input, Tooltip } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport React from 'react'\nimport './style.css'\nclass EditableTagGroup extends React.Component {\n  state = {\n    tags: this.props.tag || [],\n    inputVisible: false,\n    inputValue: '',\n    editInputIndex: -1,\n    editInputValue: '',\n  };\n  \n  handleClose = removedTag => {\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\n    this.setState({ tags });\n  };\n\n  showInput = () => {\n    this.setState({ inputVisible: true }, () => this.input.focus());\n  };\n\n  handleInputChange = e => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  handleInputConfirm = () => {\n    const { inputValue } = this.state;\n    let { tags } = this.state;\n    if (inputValue && tags.indexOf(inputValue) === -1) {\n      tags = [...tags, inputValue];\n    }\n    console.log(tags);\n    this.setState({\n      tags,\n      inputVisible: false,\n      inputValue: '',\n    });\n      this.props.setTags(tags)\n  };\n\n  handleEditInputChange = e => {\n    this.setState({ editInputValue: e.target.value });\n  };\n\n  handleEditInputConfirm = () => {\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\n      const newTags = [...tags];\n      newTags[editInputIndex] = editInputValue;\n\n      return {\n        tags: newTags,\n        editInputIndex: -1,\n        editInputValue: '',\n      };\n    });\n      this.props.setTags(this.state.tags)\n      \n  };\n\n  saveInputRef = input => {\n    this.input = input;\n  };\n\n  saveEditInputRef = input => {\n    this.editInput = input;\n  };\n\n  render() {\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\n    return (\n      <>\n        {tags.map((tag, index) => {\n          if (editInputIndex === index) {\n            return (\n              <Input\n                ref={this.saveEditInputRef}\n                key={tag}\n                size=\"small\"\n                className=\"tag-input\"\n                value={editInputValue}\n                onChange={this.handleEditInputChange}\n                onBlur={this.handleEditInputConfirm}\n                onPressEnter={this.handleEditInputConfirm}\n              />\n            );\n          }\n\n          const isLongTag = tag.length > 20;\n\n          const tagElem = (\n            <Tag\n              className=\"edit-tag\"\n              key={tag}\n              closable={index !== 0}\n              onClose={() => this.handleClose(tag)}\n            >\n              <span\n                onDoubleClick={e => {\n                  if (index !== 0) {\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\n                      this.editInput.focus();\n                    });\n                    e.preventDefault();\n                  }\n                }}\n              >\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n              </span>\n            </Tag>\n          );\n          return isLongTag ? (\n            <Tooltip title={tag} key={tag}>\n              {tagElem}\n            </Tooltip>\n          ) : (\n            tagElem\n          );\n        })}\n        {inputVisible && (\n          <Input\n            ref={this.saveInputRef}\n            type=\"text\"\n            size=\"small\"\n            className=\"tag-input\"\n            value={inputValue}\n            onChange={this.handleInputChange}\n            onBlur={this.handleInputConfirm}\n            onPressEnter={this.handleInputConfirm}\n          />\n        )}\n        {!inputVisible && (\n          <Tag className=\"site-tag-plus\" onClick={this.showInput}>\n            <PlusOutlined /> New Tag\n          </Tag>\n        )}\n      </>\n    );\n  }\n}\nexport default EditableTagGroup"]},"metadata":{},"sourceType":"module"}