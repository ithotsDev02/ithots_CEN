{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nvar _jsxFileName = \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/container/student/transactions/index.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from \"react\";\nimport { Cards } from \"../../../components/cards/frame/cards-frame\";\nimport { Main } from \"../../styled\";\nimport moment from \"moment\";\nimport axiosInstance from \"../../../config/axoisconfig\";\naxiosInstance.defaults.headers.common[\"xaccesstoken\"] = `${localStorage.getItem(\"token\") || \"\"}`;\nimport CustomTable from \"../../../components/datatable/index\";\n\nfunction TransactionTables({\n  from\n}) {\n  const [isLoading, setisLoading] = useState(false);\n  const [transactions, settransactions] = useState([]);\n  const [tbldata, settbldata] = useState([]);\n  const studentId = localStorage.getItem(\"currentUserInfo\") || 0;\n  useEffect(() => {\n    setisLoading(true);\n    let URL = \"\";\n\n    if (from == \"admin\") {\n      URL = \"https://api-v2.esculae.com/api/v1/course/transactions\";\n    } else {\n      URL = \"https://api-v2.esculae.com/api/v1/course/transactions/\" + studentId;\n    }\n\n    axiosInstance.get(URL, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => {\n      settransactions(from == \"admin\" ? resp.data.data : resp.data);\n      setisLoading(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const studentcolumns = [{\n    title: \"Transaction Date\",\n    dataIndex: \"tdate\",\n    key: \"tdate\",\n    sortDirections: [\"descend\", \"ascend\"],\n    defaultSortOrder: \"descend\",\n    sorter: (a, b) => moment(a.tdate) - moment(b.tdate)\n  }, {\n    title: \"Due Date\",\n    dataIndex: \"ddate\",\n    key: \"ddate\",\n    sortDirections: [\"descend\", \"ascend\"],\n    defaultSortOrder: \"descend\",\n    sorter: (a, b) => moment(a.ddate) - moment(b.ddate)\n  }, {\n    title: \"Course Name\",\n    dataIndex: \"cname\",\n    key: \"cname\"\n  }, {\n    title: \"Batch Name\",\n    dataIndex: \"bname\",\n    key: \"bname\"\n  }, {\n    title: \"Tutor Name\",\n    dataIndex: \"tname\",\n    key: \"tname\"\n  }, {\n    title: \"Amount\",\n    dataIndex: \"amount\",\n    key: \"amount\",\n    sortDirections: [\"descend\", \"ascend\"],\n    sorter: (a, b) => a.amount - b.amount\n  }, {\n    title: \"Transaction Id\",\n    dataIndex: \"tid\",\n    key: \"tid\",\n    sortDirections: [\"descend\", \"ascend\"],\n    sorter: (a, b) => a.tid - b.tid\n  }];\n  const admincolumns = [{\n    title: \"Transaction Date\",\n    dataIndex: \"tdate\",\n    key: \"tdate\",\n    sortDirections: [\"descend\", \"ascend\"],\n    defaultSortOrder: \"descend\",\n    sorter: (a, b) => moment(a.tdate) - moment(b.tdate)\n  }, {\n    title: \"Due Date\",\n    dataIndex: \"ddate\",\n    key: \"ddate\",\n    sortDirections: [\"descend\", \"ascend\"],\n    defaultSortOrder: \"descend\",\n    sorter: (a, b) => moment(a.ddate) - moment(b.ddate)\n  }, {\n    title: \"Student Name\",\n    dataIndex: \"sname\",\n    key: \"sname\"\n  }, {\n    title: \"Tutor Name\",\n    dataIndex: \"tname\",\n    key: \"tname\"\n  }, {\n    title: \"Course Name\",\n    dataIndex: \"cname\",\n    key: \"cname\"\n  }, {\n    title: \"Batch Name\",\n    dataIndex: \"bname\",\n    key: \"bname\"\n  }, {\n    title: \"Amount\",\n    dataIndex: \"amount\",\n    key: \"amount\",\n    sortDirections: [\"descend\", \"ascend\"],\n    sorter: (a, b) => a.amount - b.amount\n  }, {\n    title: \"Transaction Id\",\n    dataIndex: \"tid\",\n    key: \"tid\",\n    sortDirections: [\"descend\", \"ascend\"],\n    sorter: (a, b) => a.tid - b.tid\n  }];\n  useEffect(() => {\n    if (transactions.length > 0) {\n      let tmptbl = [];\n      transactions.map(item => {\n        if (item.transaction_number !== \"\" && item.transaction_number !== null) {\n          tmptbl.push({\n            key: item.id,\n            tdate: moment(item.transaction_date).format(\"DD-MM-YYYY HH:MM:SS\"),\n            ddate: item.transaction_due_date ? moment(item.transaction_due_date).format(\"DD-MM-YYYY HH:MM:SS\") : \"-\",\n            cname: item.course_name,\n            bname: item.name,\n            sname: item.student_name,\n            tname: item.faculty_name,\n            // cname: \"Python for data science\",\n            amount: item.amount,\n            tid: item.transaction_number\n          });\n        }\n      });\n      settbldata(tmptbl);\n    }\n  }, [transactions]);\n  return /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xs: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Cards, {\n    title: \"Transaction History\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CustomTable, {\n    columns: from == \"admin\" ? admincolumns : studentcolumns,\n    data: tbldata,\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  })))));\n}\n\n__signature__(TransactionTables, \"useState{[isLoading, setisLoading](false)}\\nuseState{[transactions, settransactions]([])}\\nuseState{[tbldata, settbldata]([])}\\nuseEffect{}\\nuseEffect{}\");\n\nconst _default = TransactionTables;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(TransactionTables, \"TransactionTables\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/container/student/transactions/index.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/container/student/transactions/index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/ithotsdev02/Downloads/mydownloads/CEN/src/container/student/transactions/index.js"],"names":["React","useEffect","useState","Cards","Main","moment","axiosInstance","defaults","headers","common","localStorage","getItem","CustomTable","TransactionTables","from","isLoading","setisLoading","transactions","settransactions","tbldata","settbldata","studentId","URL","get","then","resp","data","catch","err","console","log","studentcolumns","title","dataIndex","key","sortDirections","defaultSortOrder","sorter","a","b","tdate","ddate","amount","tid","admincolumns","length","tmptbl","map","item","transaction_number","push","id","transaction_date","format","transaction_due_date","cname","course_name","bname","name","sname","student_name","tname","faculty_name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Table } from \"antd\";\nimport { Cards } from \"../../../components/cards/frame/cards-frame\";\nimport { Main } from \"../../styled\";\nimport moment from \"moment\";\nimport axiosInstance from \"../../../config/axoisconfig\";\naxiosInstance.defaults.headers.common[\"xaccesstoken\"] = `${localStorage.getItem(\n  \"token\"\n) || \"\"}`;\nimport CustomTable from \"../../../components/datatable/index\";\nfunction TransactionTables({ from }) {\n  const [isLoading, setisLoading] = useState(false);\n  const [transactions, settransactions] = useState([]);\n  const [tbldata, settbldata] = useState([]);\n  const studentId = localStorage.getItem(\"currentUserInfo\") || 0;\n  useEffect(() => {\n    setisLoading(true);\n    let URL = \"\";\n    if (from == \"admin\") {\n      URL = \"https://api-v2.esculae.com/api/v1/course/transactions\";\n    } else {\n      URL = \"https://api-v2.esculae.com/api/v1/course/transactions/\" + studentId;\n    }\n    axiosInstance\n      .get(URL, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((resp) => {\n        settransactions(from == \"admin\" ? resp.data.data : resp.data);\n        setisLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  const studentcolumns = [\n    {\n      title: \"Transaction Date\",\n      dataIndex: \"tdate\",\n      key: \"tdate\",\n      sortDirections: [\"descend\", \"ascend\"],\n      defaultSortOrder: \"descend\",\n      sorter: (a, b) => moment(a.tdate) - moment(b.tdate),\n    },\n    {\n      title: \"Due Date\",\n      dataIndex: \"ddate\",\n      key: \"ddate\",\n      sortDirections: [\"descend\", \"ascend\"],\n      defaultSortOrder: \"descend\",\n      sorter: (a, b) => moment(a.ddate) - moment(b.ddate),\n    },\n    {\n      title: \"Course Name\",\n      dataIndex: \"cname\",\n      key: \"cname\",\n    },\n    {\n      title: \"Batch Name\",\n      dataIndex: \"bname\",\n      key: \"bname\",\n    },\n    {\n      title: \"Tutor Name\",\n      dataIndex: \"tname\",\n      key: \"tname\",\n    },\n    {\n      title: \"Amount\",\n      dataIndex: \"amount\",\n      key: \"amount\",\n      sortDirections: [\"descend\", \"ascend\"],\n      sorter: (a, b) => a.amount - b.amount,\n    },\n    {\n      title: \"Transaction Id\",\n      dataIndex: \"tid\",\n      key: \"tid\",\n      sortDirections: [\"descend\", \"ascend\"],\n\n      sorter: (a, b) => a.tid - b.tid,\n    },\n  ];\n  const admincolumns = [\n    {\n      title: \"Transaction Date\",\n      dataIndex: \"tdate\",\n      key: \"tdate\",\n      sortDirections: [\"descend\", \"ascend\"],\n      defaultSortOrder: \"descend\",\n      sorter: (a, b) => moment(a.tdate) - moment(b.tdate),\n    },\n    {\n      title: \"Due Date\",\n      dataIndex: \"ddate\",\n      key: \"ddate\",\n      sortDirections: [\"descend\", \"ascend\"],\n      defaultSortOrder: \"descend\",\n      sorter: (a, b) => moment(a.ddate) - moment(b.ddate),\n    },\n    {\n      title: \"Student Name\",\n      dataIndex: \"sname\",\n      key: \"sname\",\n    },\n    {\n      title: \"Tutor Name\",\n      dataIndex: \"tname\",\n      key: \"tname\",\n    },\n    {\n      title: \"Course Name\",\n      dataIndex: \"cname\",\n      key: \"cname\",\n    },\n    {\n      title: \"Batch Name\",\n      dataIndex: \"bname\",\n      key: \"bname\",\n    },\n    {\n      title: \"Amount\",\n      dataIndex: \"amount\",\n      key: \"amount\",\n      sortDirections: [\"descend\", \"ascend\"],\n      sorter: (a, b) => a.amount - b.amount,\n    },\n    {\n      title: \"Transaction Id\",\n      dataIndex: \"tid\",\n      key: \"tid\",\n      sortDirections: [\"descend\", \"ascend\"],\n\n      sorter: (a, b) => a.tid - b.tid,\n    },\n  ];\n  useEffect(() => {\n    if (transactions.length > 0) {\n      let tmptbl = [];\n      transactions.map((item) => {\n        if (\n          item.transaction_number !== \"\" &&\n          item.transaction_number !== null\n        ) {\n          tmptbl.push({\n            key: item.id,\n            tdate: moment(item.transaction_date).format(\"DD-MM-YYYY HH:MM:SS\"),\n            ddate: item.transaction_due_date\n              ? moment(item.transaction_due_date).format(\"DD-MM-YYYY HH:MM:SS\")\n              : \"-\",\n            cname: item.course_name,\n            bname: item.name,\n            sname: item.student_name,\n\n            tname: item.faculty_name,\n            // cname: \"Python for data science\",\n            amount: item.amount,\n            tid: item.transaction_number,\n          });\n        }\n      });\n      settbldata(tmptbl);\n    }\n  }, [transactions]);\n\n  return (\n    <Main>\n      {/* <Cards headless></Cards> */}\n      <Row>\n        <Col xs={24}>\n          <Cards title=\"Transaction History\">\n            <CustomTable\n              columns={from == \"admin\" ? admincolumns : studentcolumns}\n              data={tbldata}\n              loading={isLoading}\n            ></CustomTable>\n          </Cards>\n        </Col>\n      </Row>\n    </Main>\n  );\n}\n\nexport default TransactionTables;\n"]},"metadata":{},"sourceType":"module"}