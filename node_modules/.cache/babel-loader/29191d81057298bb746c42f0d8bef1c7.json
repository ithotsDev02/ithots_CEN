{"ast":null,"code":"import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nvar _jsxFileName = \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/components/autoComplete/autoComplete.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport { AutoCompleteStyled } from './style';\n\nconst onSelect = () => {// console.log('onSelect', value);\n};\n\nconst renderItem = (title, count) => {\n  return {\n    value: title,\n    label: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, title, count)\n  };\n};\n\nconst AutoComplete = props => {\n  const {\n    rtl\n  } = useSelector(state => {\n    return {\n      rtl: state.ChangeLayoutMode.rtlData\n    };\n  });\n  const {\n    customComponent,\n    patterns,\n    patternButtons,\n    width,\n    onSearch,\n    dataSource,\n    placeholder\n  } = props;\n  const content = (dataSource === null || dataSource === void 0 ? void 0 : dataSource.length) > 0 && dataSource.map(group => {\n    const {\n      title,\n      count\n    } = group;\n    return {\n      label: title,\n      options: [renderItem(title, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"certain-search-item-count\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 37\n        }\n      }, count, \" people\"))]\n    };\n  });\n\n  const onSearching = searchText => {\n    onSearch(searchText);\n  };\n\n  return customComponent ? /*#__PURE__*/React.createElement(AutoCompleteStyled, {\n    dataSource: dataSource,\n    style: {\n      width\n    },\n    onSelect: onSelect,\n    onSearch: onSearching,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, customComponent) : patterns ? /*#__PURE__*/React.createElement(AutoCompleteStyled, {\n    className: \"certain-category-search\",\n    dropdownClassName: \"certain-category-search-dropdown\",\n    dropdownMatchSelectWidth: false,\n    dropdownStyle: {\n      width: '80%'\n    },\n    style: {\n      width\n    },\n    options: content,\n    placeholder: placeholder,\n    onSearch: onSearching,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    suffix: patternButtons ? /*#__PURE__*/React.createElement(_Button, {\n      className: \"search-btn\",\n      style: {\n        [rtl ? 'marginLeft' : 'marginRight']: -20\n      },\n      type: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SearchOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(SearchOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  })) : /*#__PURE__*/React.createElement(AutoCompleteStyled, {\n    dataSource: dataSource,\n    style: {\n      width\n    },\n    onSelect: onSelect,\n    onSearch: onSearching,\n    placeholder: placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  });\n};\n\n__signature__(AutoComplete, \"useSelector{{ rtl }}\", () => [useSelector]);\n\nAutoComplete.defaultProps = {\n  width: '80%',\n  placeholder: 'Input here'\n};\nAutoComplete.propTypes = {\n  customComponent: PropTypes.node,\n  patterns: PropTypes.bool,\n  patternButtons: PropTypes.bool,\n  width: PropTypes.string,\n  onSearch: PropTypes.func,\n  dataSource: PropTypes.arrayOf(PropTypes.object),\n  placeholder: PropTypes.string\n};\nexport { AutoComplete };\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(onSelect, \"onSelect\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/components/autoComplete/autoComplete.js\");\n  reactHotLoader.register(renderItem, \"renderItem\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/components/autoComplete/autoComplete.js\");\n  reactHotLoader.register(AutoComplete, \"AutoComplete\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/components/autoComplete/autoComplete.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/ithotsdev02/Downloads/mydownloads/CEN/src/components/autoComplete/autoComplete.js"],"names":["React","PropTypes","SearchOutlined","useSelector","AutoCompleteStyled","onSelect","renderItem","title","count","value","label","display","justifyContent","AutoComplete","props","rtl","state","ChangeLayoutMode","rtlData","customComponent","patterns","patternButtons","width","onSearch","dataSource","placeholder","content","length","map","group","options","onSearching","searchText","defaultProps","propTypes","node","bool","string","func","arrayOf","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Input, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport { AutoCompleteStyled } from './style';\n\nconst onSelect = () => {\n  // console.log('onSelect', value);\n};\n\nconst renderItem = (title, count) => {\n  return {\n    value: title,\n    label: (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n        }}\n      >\n        {title}\n        {count}\n      </div>\n    ),\n  };\n};\n\nconst AutoComplete = props => {\n  const { rtl } = useSelector(state => {\n    return {\n      rtl: state.ChangeLayoutMode.rtlData,\n    };\n  });\n  const { customComponent, patterns, patternButtons, width, onSearch, dataSource, placeholder } = props;\n\n  const content =\n    dataSource?.length > 0 &&\n    dataSource.map(group => {\n      const { title, count } = group;\n      return {\n        label: title,\n        options: [renderItem(title, <span className=\"certain-search-item-count\">{count} people</span>)],\n      };\n    });\n\n  const onSearching = searchText => {\n    onSearch(searchText);\n  };\n\n  return customComponent ? (\n    <AutoCompleteStyled dataSource={dataSource} style={{ width }} onSelect={onSelect} onSearch={onSearching}>\n      {customComponent}\n    </AutoCompleteStyled>\n  ) : patterns ? (\n    <AutoCompleteStyled\n      className=\"certain-category-search\"\n      dropdownClassName=\"certain-category-search-dropdown\"\n      dropdownMatchSelectWidth={false}\n      dropdownStyle={{ width: '80%' }}\n      style={{ width }}\n      options={content}\n      placeholder={placeholder}\n      onSearch={onSearching}\n    >\n      <Input\n        suffix={\n          patternButtons ? (\n            <Button className=\"search-btn\" style={{ [rtl ? 'marginLeft' : 'marginRight']: -20 }} type=\"primary\">\n              <SearchOutlined />\n            </Button>\n          ) : (\n            <SearchOutlined />\n          )\n        }\n      />\n    </AutoCompleteStyled>\n  ) : (\n    <AutoCompleteStyled\n      dataSource={dataSource}\n      style={{ width }}\n      onSelect={onSelect}\n      onSearch={onSearching}\n      placeholder={placeholder}\n    />\n  );\n};\n\nAutoComplete.defaultProps = {\n  width: '80%',\n  placeholder: 'Input here',\n};\n\nAutoComplete.propTypes = {\n  customComponent: PropTypes.node,\n  patterns: PropTypes.bool,\n  patternButtons: PropTypes.bool,\n  width: PropTypes.string,\n  onSearch: PropTypes.func,\n  dataSource: PropTypes.arrayOf(PropTypes.object),\n  placeholder: PropTypes.string,\n};\n\nexport { AutoComplete };\n"]},"metadata":{},"sourceType":"module"}