{"ast":null,"code":"import \"antd/es/checkbox/style\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/container/CreateCourse/index.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axiosInstance from \"../../config/axoisconfig\";\nimport \"./style.css\";\nimport { BasicFormWrapper } from \"../styled\";\nimport { Button } from \"../../components/buttons/buttons\";\nimport Heading from \"../../components/heading/heading\";\nimport { Cards } from \"../../components/cards/frame/cards-frame\";\nimport { Main } from \"../styled\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\nimport { createNewCourse, resetCreationResponse } from \"../../redux/tutor/actionCreator\";\nimport { PageHeader } from \"../../components/page-headers/page-headers\";\nimport EditableTagGroup from \"../../components/tags/index\";\nimport { getCategories } from \"../../redux/categories/actionCreator\";\nimport { editCourse } from \"../../redux/course/actionCreator\";\nimport { useLocation } from \"react-router-dom\";\nimport { Steps } from \"../../components/steps/steps\";\nimport Batch from \"./partials/batch\";\nimport { CheckoutWrapper } from \"../ecommerce/Style\";\nimport errorNotification from \"../../components/notification/errorNotification\";\nimport { CustomCalender } from \"../../components/calender/calender\";\nimport DynamicList from \"../../components/dynamicInput/index\";\nimport RichTextEditor from \"react-rte\";\nimport { createBatch, getBatch, deleteBatch, editBatch } from \"../../redux/course/actionCreator\";\nimport getOverlappingDaysInIntervals from \"date-fns/esm/fp/getOverlappingDaysInIntervals/index.js\";\nimport { Fragment } from \"react\";\nwindow.RichTextEditor = RichTextEditor; // import localizer from \"react-big-calendar/lib/localizers/globalize\";\n// import globalize from \"globalize\";\n\nconst {\n  Option\n} = _Select;\nconst {\n  TextArea\n} = _Input;\nvar newCreatedCourseId = \"\"; // const globalizeLocalizer = localizer(globalize);\n\nexport const ScheduleCourse = () => {\n  if (document.getElementsByClassName(\"cbtn-next\") && document.getElementsByClassName(\"cbtn-next\")[0]) {\n    document.getElementsByClassName(\"cbtn-next\")[0].click();\n  }\n};\n\nconst CreateCourse = ({\n  type,\n  state\n}) => {\n  var _categories$data, _categories$data2;\n\n  const history = useHistory();\n\n  const [form] = _Form.useForm();\n\n  const location = useLocation();\n  const [loading, setloading] = useState(false);\n  const isLoading = useSelector(state => {\n    var _state$tutors;\n\n    return (_state$tutors = state.tutors) === null || _state$tutors === void 0 ? void 0 : _state$tutors.loading;\n  });\n  const isBatchLoading = useSelector(state => {\n    var _state$course;\n\n    return (_state$course = state.course) === null || _state$course === void 0 ? void 0 : _state$course.loading;\n  });\n  const createdCourseId = useSelector(state => {\n    var _state$tutors2, _state$tutors2$create, _state$tutors2$create2;\n\n    return (_state$tutors2 = state.tutors) === null || _state$tutors2 === void 0 ? void 0 : (_state$tutors2$create = _state$tutors2.createdResponse) === null || _state$tutors2$create === void 0 ? void 0 : (_state$tutors2$create2 = _state$tutors2$create.data) === null || _state$tutors2$create2 === void 0 ? void 0 : _state$tutors2$create2.id;\n  });\n  const [imageUrl, setimageUrl] = useState();\n  const dispatch = useDispatch();\n  const [selectedcategory, setSelectedCategory] = useState(\"\");\n  const [selectedsubcategory, setselectedsubcategory] = useState(\"\");\n  const [creatingCourse, setcreatingCourse] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [subcategories, setsubcategories] = useState([]);\n  const [tncaccepted, settncaccepted] = useState(true);\n  const [coverImage, setcoverImage] = useState(\"\");\n  const [previewCoverImage, setPreviewCoverImage] = useState(\"\");\n  const [filteredSubCat, setfilteredSubCat] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [currentWizard, setcurrentWizard] = useState(1);\n  const [batchInfo, setbatchInfo] = useState([]);\n  const [initWizNo, setinitWizNo] = useState(0);\n  const [age, setage] = useState(\"\");\n  const [keyPoints, setkeyPoints] = useState([{\n    index: Math.random(),\n    name: \"\"\n  }]);\n  const [isEditmode, setIsEditmode] = useState(false);\n  const [isSchedulemode, setisSchedulemode] = useState(false);\n  const [editorvalue, seteditorvalue] = useState(RichTextEditor.createEmptyValue());\n  const [allBatches, setallBatches] = useState([]);\n  const [finalObj, setfinalObj] = useState({});\n  const [courseDetail, setCourseDetail] = useState({});\n  const [EventTitle, setEventTitle] = useState(\"\");\n  const [days, setdays] = useState(\"\");\n  const [isCreationCourse, setisCreationCourse] = useState(false);\n  const [isCourseCreated, setisCourseCreated] = useState(false);\n  const [editCourseid, seteditCourseid] = useState(\"\");\n  const [canCreateNewBatch, setcanCreateNewBatch] = useState(true);\n  const [clickedEvent, setclickedEvent] = useState(\"\");\n  const [isEventEditMode, setisEventEditMode] = useState(false);\n  const [currentBatchInfo, setcurrentBatchInfo] = useState({});\n  const [updateEvent, setupdateEvent] = useState(false);\n  const [visible, setVisible] = useState(false); //date and time for course creation and edit\n\n  const [eventStartEndDate, seteventStartEndDate] = useState(\"\");\n  const [eventTimeSlot, seteventTimeSlot] = useState(\"\"); //state variable for editing the schedule from calender\n\n  const [batch_type, setbatch_type] = useState(\"value1\");\n  const [batch_day, setbatch_day] = useState([]);\n  const [end_date, setend_date] = useState(\"\");\n  const [end_time, setend_time] = useState(\"\");\n  const [enroll_last_date, setenroll_last_date] = useState(\"\");\n  const [name, setname] = useState(\"\");\n  const [price, setprice] = useState(\"\");\n  const [start_date, setstart_date] = useState(\"\");\n  const [start_time, setstart_time] = useState(\"\");\n  const [title, settitle] = useState(\"\");\n  const [duration, setduration] = useState(\"\");\n  const [monthprice, setmonthprice] = useState(\"\");\n  const [attendees, setattendees] = useState(1);\n  useEffect(() => {\n    if (currentWizard === 1) {\n      setisCreationCourse(true);\n    }\n\n    let categories = [];\n    let subcategories = [];\n    const categoryURL = \"https://api-v2.esculae.com/api/v1/course/category\";\n    const subCategoryURL = \"https://api-v2.esculae.com/api/v1/course/sub-category\";\n    Promise.all([axiosInstance.get(categoryURL), axiosInstance.get(subCategoryURL)]).then(responses => {\n      categories = responses[0].data;\n      subcategories = responses[1].data;\n      setCategories(categories);\n      setsubcategories(subcategories);\n    }).catch(errors => {\n      console.log(\"Error in getting api response\", errors);\n    });\n    return () => {// dispatch(resetCreationResponse());\n    };\n  }, []);\n  useEffect(() => {\n    setEventTitle(batchInfo.name || \"\");\n  }, [batchInfo]);\n  useEffect(() => {\n    if (clickedEvent !== \"\") {\n      getBatchInfo(clickedEvent.id);\n    }\n  }, [clickedEvent]);\n  useEffect(() => {\n    if (Object.keys(currentBatchInfo).length > 0) {\n      setisEventEditMode(true);\n      setVisible(true);\n      setbatch_type(currentBatchInfo.batch_type);\n      setbatch_day(currentBatchInfo.batch_day);\n      setend_date(currentBatchInfo.end_date);\n      setend_time(currentBatchInfo.end_time);\n      setenroll_last_date(currentBatchInfo.enroll_last_date);\n      setname(currentBatchInfo.name);\n      setprice(currentBatchInfo.total_price);\n      setstart_date(currentBatchInfo.start_date);\n      setstart_time(currentBatchInfo.start_time);\n      settitle(currentBatchInfo.title);\n      setmonthprice(currentBatchInfo.price);\n      setduration(currentBatchInfo.total_duration);\n    }\n  }, [currentBatchInfo]);\n\n  const makeid = length => {\n    var result = [];\n    var characters = \"abcdefghijklmnopqrstuvwxyz\";\n    var charactersLength = characters.length;\n\n    for (var i = 0; i < length; i++) {\n      result.push(characters.charAt(Math.floor(Math.random() * charactersLength)));\n    }\n\n    return result.join(\"\");\n  };\n\n  const updateBatch = () => {\n    if (title !== \"\" && batch_day.length > 0 && start_date !== \"\" && start_time !== \"\" && enroll_last_date !== \"\" && name !== \"\" && price !== \"\") {\n      let startDate = \"\";\n      let endDate = \"\";\n      let sTime = \"\";\n      let eTime = \"\";\n\n      if (eventStartEndDate === \"\") {\n        //no update made by useer\n        startDate = currentBatchInfo.start_date;\n        endDate = currentBatchInfo.end_date;\n      } else {\n        //user changed date, manipualte the date accordingly\n        startDate = eventStartEndDate[0].format(\"MM/DD/YYYY\");\n        endDate = eventStartEndDate[1].format(\"MM/DD/YYYY\");\n      }\n\n      if (eventTimeSlot === \"\") {\n        sTime = currentBatchInfo.start_time;\n        eTime = currentBatchInfo.end_time;\n      } else {\n        sTime = eventTimeSlot[0].format(\"HH:mm\");\n        eTime = eventTimeSlot[1].format(\"HH:mm\");\n      }\n\n      let data = {\n        CourseId: currentBatchInfo.CourseId,\n        name: name,\n        title: title,\n        sub_title: null,\n        batch_type: batch_type,\n        enroll_last_date: moment(enroll_last_date).format(\"MM/DD/YYYY\"),\n        price: monthprice,\n        start_date: startDate,\n        end_date: endDate,\n        batch_day: batch_day,\n        total_price: price,\n        total_duration: duration,\n        start_time: sTime,\n        end_time: eTime\n      };\n      dispatch(editBatch(currentBatchInfo.id, data));\n    }\n  };\n\n  const handleRTEChange = htmlVal => {\n    seteditorvalue(htmlVal);\n  };\n\n  const next = () => {\n    if (currentWizard === 1) {\n      console.log(currentWizard);\n      setcanCreateNewBatch(true);\n    }\n\n    setcurrentWizard(currentWizard + 1); // onCurrentChange(current, PlaceOrder);\n    // setState({\n    //   ...state,\n    //   status: 'process',\n    //   current: current + 1,\n    // });\n  };\n\n  const prev = () => {\n    setcurrentWizard(currentWizard - 1); // onCurrentChange(current, PlaceOrder);\n    // setState({\n    //   ...state,\n    //   status: 'process',\n    //   current: current - 1,\n    // });\n  };\n\n  const done = (e, createNewBatchData) => {\n    e.preventDefault();\n\n    if ((createdCourseId || editCourseid) && (Object.keys(batchInfo).length > 0 || Object.keys(createNewBatchData).length > 0) && EventTitle != \"\" && eventStartEndDate != \"\" && days && eventTimeSlot != \"\") {\n      let batchDetail = {};\n\n      if (Object.keys(batchInfo).length > 0) {\n        batchDetail = batchInfo;\n      } else {\n        batchDetail = createNewBatchData;\n      }\n\n      let meetingId = makeid(8);\n      let data = {\n        CourseId: isSchedulemode === true ? editCourseid : createdCourseId,\n        name: batchDetail.name,\n        title: EventTitle,\n        sub_title: null,\n        batch_type: batchDetail.type === \"Individual\" ? \"value1\" : \"value2\",\n        enroll_last_date: moment(batchDetail.lastdate).format(\"MM/DD/YYYY\"),\n        price: batchDetail.batchpricepermonth,\n        start_date: eventStartEndDate[0].format(\"MM/DD/YYYY\"),\n        end_date: eventStartEndDate[1].format(\"MM/DD/YYYY\"),\n        batch_day: days,\n        start_time: eventTimeSlot[0].format(\"HH:mm\"),\n        end_time: eventTimeSlot[1].format(\"HH:mm\"),\n        total_price: batchDetail.price,\n        total_duration: batchDetail.duration,\n        meeting_room: meetingId,\n        participants_size: attendees\n      };\n      dispatch(createBatch(data));\n    }\n  };\n\n  const getBatchInfo = eventId => {\n    if (eventId !== \"\") {\n      let url = \"https://api-v2.esculae.com/api/v1/course/batch/\" + eventId;\n      axiosInstance.get(url, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(resp => {\n        setcurrentBatchInfo(resp.data);\n      }).catch(err => {\n        errorNotification(\"Error in getting the batch information\");\n      });\n    }\n  };\n\n  const isFinished = () => {};\n\n  const getObj = val => {\n    var temp = [];\n    val && val.map(pts => {\n      temp.push({\n        index: Math.random(),\n        name: pts\n      });\n    });\n    setkeyPoints(temp);\n  };\n\n  const onSelect = () => {\n    alert(\"Selected a date from calender\");\n  };\n\n  const getBatches = () => {\n    let url = \"https://api-v2.esculae.com/api/v1/course/batch\";\n    axiosInstance.get(url, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => {\n      setallBatches(resp.data);\n    }).catch(err => {\n      console.log(\"Error in getting batches\", err);\n    });\n  };\n\n  useEffect(() => {\n    var _location$state, _location$state2, _location$state2$cour, _location$state3, _location$state4, _location$state5, _location$state7, _location$state8, _location$state8$cour, _location$state9, _location$state9$cour, _location$state10, _location$state10$cou, _location$state11, _location$state11$cou, _location$state12, _location$state12$cou, _location$state13, _location$state13$cou, _location$state14, _location$state14$cou, _location$state15, _location$state15$cou, _location$state16, _location$state16$cou, _location$state17, _location$state17$cou, _location$state18, _location$state18$cou, _location$state19, _location$state19$cou, _location$state20;\n\n    setIsEditmode((location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.isEdit) || false);\n    console.log(\"the data is\", RichTextEditor.createValueFromString(location === null || location === void 0 ? void 0 : (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : (_location$state2$cour = _location$state2.courseInfo) === null || _location$state2$cour === void 0 ? void 0 : _location$state2$cour.details_description, \"html\"));\n    setCourseDetail((location === null || location === void 0 ? void 0 : (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.courseInfo) || {});\n    setisSchedulemode((location === null || location === void 0 ? void 0 : (_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : _location$state4.isSchedule) || false);\n\n    if (location === null || location === void 0 ? void 0 : (_location$state5 = location.state) === null || _location$state5 === void 0 ? void 0 : _location$state5.isSchedule) {\n      var _location$state6, _location$state6$cour;\n\n      getBatches();\n      seteditCourseid(location === null || location === void 0 ? void 0 : (_location$state6 = location.state) === null || _location$state6 === void 0 ? void 0 : (_location$state6$cour = _location$state6.courseInfo) === null || _location$state6$cour === void 0 ? void 0 : _location$state6$cour.id); // dispatch(getBatch());\n\n      if (document.getElementsByClassName(\"cbtn-next\") && document.getElementsByClassName(\"cbtn-next\")[0]) {\n        document.getElementsByClassName(\"cbtn-next\")[0].click();\n      }\n    }\n\n    setinitWizNo((location === null || location === void 0 ? void 0 : (_location$state7 = location.state) === null || _location$state7 === void 0 ? void 0 : _location$state7.isSchedule) === true ? 1 : 0);\n    getObj(location === null || location === void 0 ? void 0 : (_location$state8 = location.state) === null || _location$state8 === void 0 ? void 0 : (_location$state8$cour = _location$state8.courseInfo) === null || _location$state8$cour === void 0 ? void 0 : _location$state8$cour.key_points); //  seteditorvalue(location?.state?.courseInfo?.details_description)\n\n    form.setFieldsValue({\n      detailedDescription: RichTextEditor.createValueFromString(location === null || location === void 0 ? void 0 : (_location$state9 = location.state) === null || _location$state9 === void 0 ? void 0 : (_location$state9$cour = _location$state9.courseInfo) === null || _location$state9$cour === void 0 ? void 0 : _location$state9$cour.details_description, \"html\")\n    });\n    seteditorvalue(RichTextEditor.createValueFromString(location === null || location === void 0 ? void 0 : (_location$state10 = location.state) === null || _location$state10 === void 0 ? void 0 : (_location$state10$cou = _location$state10.courseInfo) === null || _location$state10$cou === void 0 ? void 0 : _location$state10$cou.details_description, \"html\"));\n    setSelectedCategory(parseInt((location === null || location === void 0 ? void 0 : (_location$state11 = location.state) === null || _location$state11 === void 0 ? void 0 : (_location$state11$cou = _location$state11.courseInfo) === null || _location$state11$cou === void 0 ? void 0 : _location$state11$cou.category) || 0));\n    categorySelected(parseInt((location === null || location === void 0 ? void 0 : (_location$state12 = location.state) === null || _location$state12 === void 0 ? void 0 : (_location$state12$cou = _location$state12.courseInfo) === null || _location$state12$cou === void 0 ? void 0 : _location$state12$cou.category) || 0));\n    setselectedsubcategory(parseInt((location === null || location === void 0 ? void 0 : (_location$state13 = location.state) === null || _location$state13 === void 0 ? void 0 : (_location$state13$cou = _location$state13.courseInfo) === null || _location$state13$cou === void 0 ? void 0 : _location$state13$cou.sub_category) || 0));\n    setage(parseInt(location === null || location === void 0 ? void 0 : (_location$state14 = location.state) === null || _location$state14 === void 0 ? void 0 : (_location$state14$cou = _location$state14.courseInfo) === null || _location$state14$cou === void 0 ? void 0 : _location$state14$cou.age_limit));\n    setTags(location === null || location === void 0 ? void 0 : (_location$state15 = location.state) === null || _location$state15 === void 0 ? void 0 : (_location$state15$cou = _location$state15.courseInfo) === null || _location$state15$cou === void 0 ? void 0 : _location$state15$cou.tags);\n    let a = createFile(\"https://api-v2.esculae.com/\" + (location === null || location === void 0 ? void 0 : (_location$state16 = location.state) === null || _location$state16 === void 0 ? void 0 : (_location$state16$cou = _location$state16.courseInfo) === null || _location$state16$cou === void 0 ? void 0 : _location$state16$cou.image));\n    toDataURL(\"https://api-v2.esculae.com/\" + (location === null || location === void 0 ? void 0 : (_location$state17 = location.state) === null || _location$state17 === void 0 ? void 0 : (_location$state17$cou = _location$state17.courseInfo) === null || _location$state17$cou === void 0 ? void 0 : _location$state17$cou.image)).then(dataUrl => {\n      var fileData = dataURLtoFile(dataUrl, \"imageName.jpg\");\n      setcoverImage(fileData);\n    });\n    setPreviewCoverImage({\n      uid: \"-1\",\n      name: \"preview.png\",\n      status: \"done\",\n      url: \"https://api-v2.esculae.com/\" + (location === null || location === void 0 ? void 0 : (_location$state18 = location.state) === null || _location$state18 === void 0 ? void 0 : (_location$state18$cou = _location$state18.courseInfo) === null || _location$state18$cou === void 0 ? void 0 : _location$state18$cou.image) || \"\",\n      thumbUrl: \"https://api-v2.esculae.com/\" + (location === null || location === void 0 ? void 0 : (_location$state19 = location.state) === null || _location$state19 === void 0 ? void 0 : (_location$state19$cou = _location$state19.courseInfo) === null || _location$state19$cou === void 0 ? void 0 : _location$state19$cou.image) || \"\"\n    });\n    console.log(\"sadasvrdsdc\", location === null || location === void 0 ? void 0 : (_location$state20 = location.state) === null || _location$state20 === void 0 ? void 0 : _location$state20.courseInfo);\n  }, [location, subcategories]);\n\n  async function createFile(url) {\n    let response = await fetch(url);\n    let data = await response.blob();\n    let metadata = {\n      type: \"image/jpeg\"\n    };\n    let file = new File([data], \"preview.jpg\", metadata);\n    return file;\n  }\n\n  const uploadButton = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(LoadingOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 18\n    }\n  }) : /*#__PURE__*/React.createElement(PlusOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 40\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }\n  }, \"Upload\"));\n\n  const getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n  };\n\n  const beforeUpload = file => {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n\n    if (!isJpgOrPng) {// message.error(\"You can only upload JPG/PNG file!\");\n    }\n\n    const isLt2M = file.size / 1024 / 1024 < 2;\n\n    if (!isLt2M) {// message.error(\"Image must smaller than 2MB!\");\n    }\n\n    return isJpgOrPng && isLt2M;\n  };\n\n  const toDataURL = url => fetch(url).then(response => response.blob()).then(blob => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onloadend = () => resolve(reader.result);\n\n    reader.onerror = reject;\n    reader.readAsDataURL(blob);\n  }));\n\n  function dataURLtoFile(dataurl, filename) {\n    var arr = dataurl.split(\",\"),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n\n    return new File([u8arr], filename, {\n      type: mime\n    });\n  }\n\n  const handleChange = info => {\n    const isJpgOrPng = info.file.type === \"image/jpeg\" || info.file.type === \"image/png\";\n    const isLt2M = info.file.size / 1024 / 1024 < 2;\n\n    if (!isJpgOrPng) {\n      errorNotification(\"You can only upload JPG/PNG file!\");\n    } else if (!isLt2M) {\n      errorNotification(\"Image must smaller than 2MB!\");\n    } else {\n      setcoverImage(info.file);\n\n      if (info.file.status === \"uploading\") {\n        setloading(true);\n        return;\n      }\n\n      if (info.file.status === \"done\") {\n        getBase64(info.file.originFileObj, imageUrl => {\n          setloading(false);\n          setimageUrl(imageUrl);\n        });\n      }\n    }\n  };\n\n  const categorySelected = cat => {\n    var _subcategories$data;\n\n    let tmp = [];\n    console.log(\"cat ius\", cat, subcategories);\n    setSelectedCategory(cat);\n    subcategories === null || subcategories === void 0 ? void 0 : (_subcategories$data = subcategories.data) === null || _subcategories$data === void 0 ? void 0 : _subcategories$data.map(item => {\n      if (item.CategoryId === cat && item.is_active === true) {\n        tmp.push(item);\n      }\n    });\n    console.log(\" \", tmp);\n    setfilteredSubCat(tmp);\n  };\n\n  const handleAgeChange = age => {\n    setage(age);\n  };\n\n  const redirectToDashboard = () => {\n    history.push(\"/tutor\");\n  };\n\n  const handleSubmit = () => {\n    let courseTitle = form.getFieldValue(\"courseTitle\");\n    let courseLevel = form.getFieldValue(\"courseLevel\"); // let shortDescription = form.getFieldValue(\"shortDescription\");\n\n    let SpecialDescription = form.getFieldValue(\"SpecialDescription\");\n    let courseLanguage = form.getFieldValue(\"courseLanguage\");\n\n    if (tncaccepted === true) {\n      // console.log(\n      //   `the saving info ${courseTitle} - ${selectedcategory} - ${selectedsubcategory} - ${courseLevel} - ${editorvalue} - ${tags} - ${SpecialDescription} - ${age} - ${coverImage}`\n      // );\n      if (courseTitle && selectedcategory && selectedsubcategory && courseLevel && editorvalue.toString(\"html\") !== \"<p><br></p>\" && tags && SpecialDescription && // &&\n      // age\n      courseLanguage && coverImage) {\n        let keypt = [];\n        let userData = {\n          userId: localStorage.getItem(\"currentUserInfo\") || 0\n        };\n        keyPoints.map(point => {\n          if (point.name !== \"\") {}\n\n          keypt.push(point.name);\n        });\n        let formData = new FormData();\n        formData.append(\"title\", courseTitle);\n        formData.append(\"category\", selectedcategory);\n        formData.append(\"sub_category\", selectedsubcategory);\n        formData.append(\"course_level\", courseLevel);\n        formData.append(\"short_description\", \"shortDescription\");\n        formData.append(\"image\", coverImage);\n        formData.append(\"userData\", userData);\n        keypt.forEach(item => formData.append(\"key_points[]\", item));\n        formData.append(\"details_description\", editorvalue.toString(\"html\"));\n        tags.forEach(item => {\n          formData.append(\"tags[]\", item);\n        });\n        formData.append(\"created_by\", localStorage.getItem(\"currentUserInfo\") || 0);\n        formData.append(\"special_description\", SpecialDescription);\n        formData.append(\"duration\", duration);\n        formData.append(\"age_limit\", age);\n        formData.append(\"language\", courseLanguage);\n        formData.append(\"is_active\", true);\n        formData.append(\"region_id\", 1);\n\n        if (isEditmode === false) {\n          setcreatingCourse(true);\n          dispatch(createNewCourse(formData, redirectToDashboard));\n        } else {\n          var _location$state21, _location$state21$cou;\n\n          dispatch(editCourse(location === null || location === void 0 ? void 0 : (_location$state21 = location.state) === null || _location$state21 === void 0 ? void 0 : (_location$state21$cou = _location$state21.courseInfo) === null || _location$state21$cou === void 0 ? void 0 : _location$state21$cou.id, formData));\n        }\n      } else {\n        errorNotification(\"Please fill all the fields to create a course\");\n      }\n    } else {\n      errorNotification(\"Please accept terms and conditions to proceed\");\n    }\n  };\n\n  const removeBatch = () => {\n    dispatch(deleteBatch(clickedEvent.id));\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 5\n    }\n  }, isEditmode === false ? /*#__PURE__*/React.createElement(PageHeader, {\n    ghost: true,\n    title: \"Create New Course\",\n    buttons: [/*#__PURE__*/React.createElement(\"div\", {\n      key: \"6\",\n      className: \"page-header-actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 21\n      }\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null), isEditmode === false ? /*#__PURE__*/React.createElement(Main, {\n    style: {\n      marginTop: \"-90px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Row, {\n    gutter: 15,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    md: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Cards, {\n    headless: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CheckoutWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Steps, {\n    isswitch: true,\n    current: 0,\n    status: \"process\",\n    steps: [{\n      title: \"Course Details\",\n      content: isLoading ? /*#__PURE__*/React.createElement(_Col, {\n        xs: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"spin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(_Spin, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 31\n        }\n      }))) : /*#__PURE__*/React.createElement(BasicFormWrapper, {\n        className: \"basic-form-inner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"atbd-form-checkout\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(_Row, {\n        justify: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(_Col, {\n        sm: 22,\n        xs: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"create-account-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(Heading, {\n        as: \"h4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 37\n        }\n      }, \"Please Fill your Course Information\"), /*#__PURE__*/React.createElement(_Form, {\n        style: {\n          width: \"100%\"\n        },\n        form: form,\n        name: \"info\",\n        onFinish: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"Give a Title\",\n        name: \"courseTitle\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(_Input, {\n        placeholder: \"Course title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 43\n        }\n      })), /*#__PURE__*/React.createElement(_Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(_Col, {\n        lg: 11,\n        md: 11,\n        sm: 24,\n        xs: 24,\n        xxl: 11,\n        xl: 11,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"Select a Category\",\n        name: \"selectCategory\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(_Select, {\n        placeholder: \"Select a Category\",\n        onChange: value => categorySelected(value) // setSelectedCategory(value)\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 47\n        }\n      }, categories === null || categories === void 0 ? void 0 : (_categories$data = categories.data) === null || _categories$data === void 0 ? void 0 : _categories$data.map(item => /*#__PURE__*/React.createElement(Option, {\n        value: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 53\n        }\n      }, item.name))))), /*#__PURE__*/React.createElement(_Col, {\n        lg: 1,\n        md: 1,\n        xxl: 1,\n        xl: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 43\n        }\n      }), /*#__PURE__*/React.createElement(_Col, {\n        // style={{ marginLeft: \"10px\" }}\n        lg: 12,\n        md: 12,\n        sm: 24,\n        xs: 24,\n        xxl: 12,\n        xl: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"Select a Sub Category\",\n        name: \"selectsubCategory\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(_Select, {\n        placeholder: \"Select a Sub Category\",\n        onChange: value => setselectedsubcategory(value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 47\n        }\n      }, filteredSubCat.map(item => /*#__PURE__*/React.createElement(Option, {\n        value: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 51\n        }\n      }, item.name)))))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"Course Level\",\n        name: \"courseLevel\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(_Radio.Group, {\n        value: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(_Radio, {\n        value: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 45\n        }\n      }, \"Beginner\"), /*#__PURE__*/React.createElement(_Radio, {\n        value: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 45\n        }\n      }, \"Intermediate\"), /*#__PURE__*/React.createElement(_Radio, {\n        value: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 45\n        }\n      }, \"Advanced\"))), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"Add Cover Image\",\n        name: \"coverImage\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(_Upload, {\n        name: \"coverImage\",\n        listType: \"picture-card\",\n        className: \"avatar-uploader\",\n        showUploadList: true // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n        ,\n        beforeUpload: () => false // beforeUpload={beforeUpload}\n        ,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740,\n          columnNumber: 43\n        }\n      }, imageUrl ? /*#__PURE__*/React.createElement(\"img\", {\n        src: imageUrl,\n        alt: \"avatar\",\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 47\n        }\n      }) : uploadButton)), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"Detailed Description\",\n        name: \"detailedDescription\",\n        initialValue: editorvalue,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(RichTextEditor, {\n        placeholder: \"Type here\",\n        value: editorvalue,\n        onChange: handleRTEChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 43\n        }\n      })), /*#__PURE__*/React.createElement(_Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(_Col, {\n        lg: 11,\n        md: 11,\n        sm: 24,\n        xs: 24,\n        xxl: 11,\n        xl: 11,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"Age Limit\",\n        name: \"ageLimit\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(_Select, {\n        style: {\n          width: 120\n        },\n        onChange: handleAgeChange,\n        placeholder: \"Please provide age limit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 47\n        }\n      }, /*#__PURE__*/React.createElement(Option, {\n        value: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 49\n        }\n      }, \"4+\"), /*#__PURE__*/React.createElement(Option, {\n        value: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 49\n        }\n      }, \"8+\"), /*#__PURE__*/React.createElement(Option, {\n        value: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 49\n        }\n      }, \"12+\"), /*#__PURE__*/React.createElement(Option, {\n        value: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 49\n        }\n      }, \"16+\"), /*#__PURE__*/React.createElement(Option, {\n        value: 18,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 49\n        }\n      }, \"18+\"), \" \", /*#__PURE__*/React.createElement(Option, {\n        value: 22,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 49\n        }\n      }, \"22+\"), \" \", /*#__PURE__*/React.createElement(Option, {\n        value: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 49\n        }\n      }, \"24+\")))), /*#__PURE__*/React.createElement(_Col, {\n        lg: 1,\n        md: 1,\n        xxl: 1,\n        xl: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 43\n        }\n      }), /*#__PURE__*/React.createElement(_Col, {\n        lg: 12,\n        md: 12,\n        sm: 24,\n        xs: 24,\n        xxl: 12,\n        xl: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"Course Language\",\n        name: \"courseLanguage\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(_Input, {\n        placeholder: \"course language\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 47\n        }\n      })))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"What you will learn\",\n        name: \"learnWhat\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(DynamicList, {\n        setkeyPoints: setkeyPoints,\n        keyPoints: keyPoints,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 43\n        }\n      })), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"Enter Course Related Keyword\",\n        name: \"courseReleatedKeyword\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(EditableTagGroup, {\n        tag: tags,\n        setTags: setTags,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 43\n        }\n      })), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"Special Description\",\n        name: \"SpecialDescription\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(TextArea, {\n        placeholder: \"Special Description\",\n        rows: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 43\n        }\n      })), /*#__PURE__*/React.createElement(_Form.Item, {\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"grid\",\n          placeItems: \"center\",\n          paddingBottom: \"40px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(_Form.Item, {\n        required: true,\n        name: \"acceptTerms\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(_Checkbox, {\n        value: tncaccepted,\n        required: true,\n        onChange: value => settncaccepted(value.target.checked),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 47\n        }\n      }, \"Accept Terms and Conditions\")), /*#__PURE__*/React.createElement(Button, {\n        htmlType: \"submit\",\n        type: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 45\n        }\n      }, \"Create Course\"))))))))))\n    }, {\n      title: \"Batch Details\",\n      content: isBatchLoading ? /*#__PURE__*/React.createElement(_Col, {\n        xs: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"spin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(_Spin, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 912,\n          columnNumber: 31\n        }\n      }))) : /*#__PURE__*/React.createElement(Batch, {\n        form: form,\n        isEventEditMode: isEventEditMode,\n        allBatches: allBatches,\n        batchInfo: batchInfo,\n        setbatchInfo: setbatchInfo,\n        settitle: settitle,\n        setEventTitle: setEventTitle,\n        seteventStartEndDate: seteventStartEndDate,\n        setbatch_day: setbatch_day,\n        setdays: setdays,\n        seteventTimeSlot: seteventTimeSlot,\n        setcanCreateNewBatch: setcanCreateNewBatch,\n        canCreateNewBatch: canCreateNewBatch,\n        createBatch: done,\n        setattendees: setattendees,\n        attendees: setattendees,\n        createdCourseId: isSchedulemode ? courseDetail === null || courseDetail === void 0 ? void 0 : courseDetail.id : createdCourseId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 27\n        }\n      })\n    } // {\n    //   title: \"Schedule Course\",\n    //   content: isBatchLoading ? (\n    //     <Col xs={24}>\n    //       <div className=\"spin\">\n    //         <Spin />\n    //       </div>\n    //     </Col>\n    //   ) : (\n    //     <Fragment>\n    //       <BasicFormWrapper className=\"basic-form-inner\">\n    //         <div className=\"atbd-form-checkout\">\n    //           <Row justify=\"center\">\n    //             <Col sm={22} xs={24}>\n    //               <div className=\"create-account-form\">\n    //                 <Heading as=\"h4\">\n    //                   3. Schedule your course\n    //                 </Heading>\n    //               </div>\n    //             </Col>\n    //           </Row>\n    //         </div>\n    //         <Row>\n    //           <CustomCalender\n    //             onSelect={onSelect}\n    //             EventTitle={EventTitle}\n    //             setEventTitle={setEventTitle}\n    //             eventStartEndDate={eventStartEndDate}\n    //             seteventStartEndDate={seteventStartEndDate}\n    //             currentBatchInfo={currentBatchInfo}\n    //             isEventEditMode={isEventEditMode}\n    //             visible={visible}\n    //             setVisible={setVisible}\n    //             allBatches={allBatches}\n    //             setclickedEvent={setclickedEvent}\n    //             duration={duration}\n    //             setduration={setduration}\n    //             setmonthprice={setmonthprice}\n    //             monthprice={monthprice}\n    //             days={days}\n    //             getBatchInfo={getBatchInfo}\n    //             setdays={setdays}\n    //             eventTimeSlot={eventTimeSlot}\n    //             seteventTimeSlot={seteventTimeSlot}\n    //             batch_type={batch_type}\n    //             batch_day={batch_day}\n    //             end_date={end_date}\n    //             end_time={end_time}\n    //             enroll_last_date={enroll_last_date}\n    //             name={name}\n    //             price={price}\n    //             start_date={start_date}\n    //             start_time={start_time}\n    //             title={title}\n    //             setbatch_type={setbatch_type}\n    //             setbatch_day={setbatch_day}\n    //             setend_date={setend_date}\n    //             setend_time={setend_time}\n    //             setenroll_last_date={setenroll_last_date}\n    //             setname={setname}\n    //             setprice={setprice}\n    //             setstart_date={setstart_date}\n    //             setstart_time={setstart_time}\n    //             settitle={settitle}\n    //             setisEventEditMode={setisEventEditMode}\n    //             deleteBatch={removeBatch}\n    //             editBatch={updateBatch}\n    //           />\n    //         </Row>\n    //       </BasicFormWrapper>\n    //     </Fragment>\n    //   ),\n    // },\n    ],\n    onNext: next,\n    onPrev: prev,\n    onDone: e => done(e),\n    isSchedulemode: isSchedulemode // current={curr}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 19\n    }\n  })))))) : /*#__PURE__*/React.createElement(_Row, {\n    style: {\n      marginLeft: \"50px\",\n      marginRight: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1027,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    lg: 24,\n    xs: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1028,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Cards, {\n    headless: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1029,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Row, {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1030,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xl: 10,\n    md: 16,\n    xs: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1031,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-info-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1032,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(BasicFormWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1033,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(_Form, {\n    style: {\n      width: \"100%\"\n    },\n    form: form,\n    name: \"info\",\n    onFinish: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1034,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"grid\",\n      placeItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1040,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1041,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Heading, {\n    className: \"form-title\",\n    as: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1042,\n      columnNumber: 27\n    }\n  }, \"Update the course details\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1045,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"Give a Title\",\n    name: \"courseTitle\",\n    initialValue: (courseDetail === null || courseDetail === void 0 ? void 0 : courseDetail.title) || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1048,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"Course title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1053,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1055,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    lg: 11,\n    sm: 24,\n    xs: 24,\n    md: 11,\n    xxl: 11,\n    xl: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1056,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"Select a Category\",\n    name: \"selectCategory\",\n    initialValue: parseInt((courseDetail === null || courseDetail === void 0 ? void 0 : courseDetail.category) || 0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1064,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(_Select, {\n    placeholder: \"Select a Category\",\n    onChange: value => categorySelected(value) // setSelectedCategory(value)\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1071,\n      columnNumber: 33\n    }\n  }, categories === null || categories === void 0 ? void 0 : (_categories$data2 = categories.data) === null || _categories$data2 === void 0 ? void 0 : _categories$data2.map(item => /*#__PURE__*/React.createElement(Option, {\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1079,\n      columnNumber: 37\n    }\n  }, item.name))))), /*#__PURE__*/React.createElement(_Col, {\n    lg: 1,\n    md: 1,\n    sm: 1,\n    xs: 1,\n    xxl: 1,\n    xl: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1084,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(_Col, {\n    lg: 12,\n    md: 12,\n    sm: 24,\n    xs: 24,\n    xxl: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1093,\n      columnNumber: 29\n    }\n  }, console.log(\"edit fisldf\", filteredSubCat), /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"Select a Sub Category\",\n    name: \"selectsubCategory\",\n    initialValue: parseInt((courseDetail === null || courseDetail === void 0 ? void 0 : courseDetail.sub_category) || 0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1102,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(_Select, {\n    placeholder: \"Select a Sub Category\",\n    onChange: value => setselectedsubcategory(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1109,\n      columnNumber: 33\n    }\n  }, filteredSubCat.map(item => /*#__PURE__*/React.createElement(Option, {\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1116,\n      columnNumber: 37\n    }\n  }, item.name)))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1122,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"Course Level\",\n    name: \"courseLevel\",\n    initialValue: parseInt((courseDetail === null || courseDetail === void 0 ? void 0 : courseDetail.course_level) || 0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1123,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(_Radio.Group, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1130,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(_Radio, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1131,\n      columnNumber: 31\n    }\n  }, \"Beginner\"), /*#__PURE__*/React.createElement(_Radio, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1132,\n      columnNumber: 31\n    }\n  }, \"Intermediate\"), /*#__PURE__*/React.createElement(_Radio, {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1133,\n      columnNumber: 31\n    }\n  }, \"Advanced\"))), /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"Add Cover Image\",\n    name: \"coverImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1147,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(_Upload, {\n    name: \"coverImage\",\n    listType: \"picture-card\",\n    className: \"avatar-uploader\",\n    showUploadList: true // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n    ,\n    beforeUpload: () => false // beforeUpload={beforeUpload}\n    ,\n    onChange: handleChange,\n    defaultFileList: [previewCoverImage] // name=\"coverImage\"\n    // listType=\"picture-card\"\n    // className=\"avatar-uploader\"\n    // showUploadList={false}\n    // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n    // beforeUpload={beforeUpload}\n    // onChange={handleChange}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1148,\n      columnNumber: 29\n    }\n  }, imageUrl ? /*#__PURE__*/React.createElement(\"img\", {\n    src: imageUrl,\n    alt: \"avatar\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1167,\n      columnNumber: 33\n    }\n  }) : uploadButton)), console.log(\"the value sent for editing is\", editorvalue), /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"Detailed Description\",\n    name: \"detailedDescription\",\n    initialValue: editorvalue || \"\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1181,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(RichTextEditor, {\n    placeholder: \"Type here\",\n    value: editorvalue,\n    format: \"html\",\n    onChange: handleRTEChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1187,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1198,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    lg: 11,\n    sm: 24,\n    xs: 24,\n    md: 11,\n    xxl: 11,\n    xl: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1199,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"Age Limit\",\n    name: \"ageLimit\",\n    required: true,\n    initialValue: parseInt((courseDetail === null || courseDetail === void 0 ? void 0 : courseDetail.age_limit) || 0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1207,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(_Select, {\n    style: {\n      width: 120\n    },\n    onChange: handleAgeChange,\n    placeholder: \"Please provide age limit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1215,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1220,\n      columnNumber: 35\n    }\n  }, \"4+\"), /*#__PURE__*/React.createElement(Option, {\n    value: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1221,\n      columnNumber: 35\n    }\n  }, \"8+\"), /*#__PURE__*/React.createElement(Option, {\n    value: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1222,\n      columnNumber: 35\n    }\n  }, \"12+\"), /*#__PURE__*/React.createElement(Option, {\n    value: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1223,\n      columnNumber: 35\n    }\n  }, \"16+\"), /*#__PURE__*/React.createElement(Option, {\n    value: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1224,\n      columnNumber: 35\n    }\n  }, \"18+\"), \" \", /*#__PURE__*/React.createElement(Option, {\n    value: 22,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1225,\n      columnNumber: 35\n    }\n  }, \"22+\"), \" \", /*#__PURE__*/React.createElement(Option, {\n    value: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1226,\n      columnNumber: 35\n    }\n  }, \"24+\")))), /*#__PURE__*/React.createElement(_Col, {\n    lg: 1,\n    md: 1,\n    sm: 1,\n    xs: 1,\n    xxl: 1,\n    xl: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1236,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(_Col, {\n    lg: 12,\n    md: 12,\n    sm: 24,\n    xs: 24,\n    xxl: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1244,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"Course Language\",\n    name: \"courseLanguage\",\n    required: true,\n    initialValue: (courseDetail === null || courseDetail === void 0 ? void 0 : courseDetail.language) || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1252,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"course language\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1258,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1262,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"What you will learn\",\n    name: \"learnWhat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1264,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(DynamicList, {\n    setkeyPoints: setkeyPoints,\n    keyPoints: keyPoints,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1268,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"Enter Course Related Keyword\",\n    name: \"courseReleatedKeyword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1329,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(EditableTagGroup, {\n    tag: tags,\n    setTags: setTags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1333,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    label: \"Special Description\",\n    name: \"SpecialDescription\",\n    initialValue: (courseDetail === null || courseDetail === void 0 ? void 0 : courseDetail.special_description) || \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1339,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    placeholder: \"Special Description\",\n    rows: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1346,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(_Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1351,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"grid\",\n      placeItems: \"center\",\n      paddingBottom: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1352,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(_Form.Item, {\n    required: true,\n    name: \"acceptTerms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1359,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(_Checkbox, {\n    value: tncaccepted,\n    required: true,\n    onChange: value => settncaccepted(value.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1360,\n      columnNumber: 33\n    }\n  }, \"Accept Terms and Conditions\")), /*#__PURE__*/React.createElement(Button, {\n    disabled: tncaccepted ? false : true,\n    htmlType: \"submit\",\n    type: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1370,\n      columnNumber: 31\n    }\n  }, \"Update Course\")))))))), /*#__PURE__*/React.createElement(_Col, {\n    span: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1384,\n      columnNumber: 17\n    }\n  }))))));\n};\n\n__signature__(CreateCourse, \"useHistory{history}\\nuseForm{[form]}\\nuseLocation{location}\\nuseState{[loading, setloading](false)}\\nuseSelector{isLoading}\\nuseSelector{isBatchLoading}\\nuseSelector{createdCourseId}\\nuseState{[imageUrl, setimageUrl]}\\nuseDispatch{dispatch}\\nuseState{[selectedcategory, setSelectedCategory](\\\"\\\")}\\nuseState{[selectedsubcategory, setselectedsubcategory](\\\"\\\")}\\nuseState{[creatingCourse, setcreatingCourse](false)}\\nuseState{[categories, setCategories]([])}\\nuseState{[subcategories, setsubcategories]([])}\\nuseState{[tncaccepted, settncaccepted](true)}\\nuseState{[coverImage, setcoverImage](\\\"\\\")}\\nuseState{[previewCoverImage, setPreviewCoverImage](\\\"\\\")}\\nuseState{[filteredSubCat, setfilteredSubCat]([])}\\nuseState{[tags, setTags]([])}\\nuseState{[currentWizard, setcurrentWizard](1)}\\nuseState{[batchInfo, setbatchInfo]([])}\\nuseState{[initWizNo, setinitWizNo](0)}\\nuseState{[age, setage](\\\"\\\")}\\nuseState{[keyPoints, setkeyPoints]([\\n    {\\n      index: Math.random(),\\n      name: \\\"\\\",\\n    },\\n  ])}\\nuseState{[isEditmode, setIsEditmode](false)}\\nuseState{[isSchedulemode, setisSchedulemode](false)}\\nuseState{[editorvalue, seteditorvalue](RichTextEditor.createEmptyValue())}\\nuseState{[allBatches, setallBatches]([])}\\nuseState{[finalObj, setfinalObj]({})}\\nuseState{[courseDetail, setCourseDetail]({})}\\nuseState{[EventTitle, setEventTitle](\\\"\\\")}\\nuseState{[days, setdays](\\\"\\\")}\\nuseState{[isCreationCourse, setisCreationCourse](false)}\\nuseState{[isCourseCreated, setisCourseCreated](false)}\\nuseState{[editCourseid, seteditCourseid](\\\"\\\")}\\nuseState{[canCreateNewBatch, setcanCreateNewBatch](true)}\\nuseState{[clickedEvent, setclickedEvent](\\\"\\\")}\\nuseState{[isEventEditMode, setisEventEditMode](false)}\\nuseState{[currentBatchInfo, setcurrentBatchInfo]({})}\\nuseState{[updateEvent, setupdateEvent](false)}\\nuseState{[visible, setVisible](false)}\\nuseState{[eventStartEndDate, seteventStartEndDate](\\\"\\\")}\\nuseState{[eventTimeSlot, seteventTimeSlot](\\\"\\\")}\\nuseState{[batch_type, setbatch_type](\\\"value1\\\")}\\nuseState{[batch_day, setbatch_day]([])}\\nuseState{[end_date, setend_date](\\\"\\\")}\\nuseState{[end_time, setend_time](\\\"\\\")}\\nuseState{[enroll_last_date, setenroll_last_date](\\\"\\\")}\\nuseState{[name, setname](\\\"\\\")}\\nuseState{[price, setprice](\\\"\\\")}\\nuseState{[start_date, setstart_date](\\\"\\\")}\\nuseState{[start_time, setstart_time](\\\"\\\")}\\nuseState{[title, settitle](\\\"\\\")}\\nuseState{[duration, setduration](\\\"\\\")}\\nuseState{[monthprice, setmonthprice](\\\"\\\")}\\nuseState{[attendees, setattendees](1)}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\\nuseEffect{}\", () => [useHistory, useLocation, useSelector, useSelector, useSelector, useDispatch]);\n\nconst _default = CreateCourse;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Option, \"Option\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/container/CreateCourse/index.js\");\n  reactHotLoader.register(TextArea, \"TextArea\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/container/CreateCourse/index.js\");\n  reactHotLoader.register(newCreatedCourseId, \"newCreatedCourseId\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/container/CreateCourse/index.js\");\n  reactHotLoader.register(ScheduleCourse, \"ScheduleCourse\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/container/CreateCourse/index.js\");\n  reactHotLoader.register(CreateCourse, \"CreateCourse\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/container/CreateCourse/index.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/container/CreateCourse/index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/ithotsdev02/Downloads/mydownloads/CEN/src/container/CreateCourse/index.js"],"names":["React","useState","useEffect","useSelector","useDispatch","axiosInstance","BasicFormWrapper","Button","Heading","Cards","Main","LoadingOutlined","PlusOutlined","moment","useHistory","createNewCourse","resetCreationResponse","PageHeader","EditableTagGroup","getCategories","editCourse","useLocation","Steps","Batch","CheckoutWrapper","errorNotification","CustomCalender","DynamicList","RichTextEditor","createBatch","getBatch","deleteBatch","editBatch","getOverlappingDaysInIntervals","Fragment","window","Option","TextArea","newCreatedCourseId","ScheduleCourse","document","getElementsByClassName","click","CreateCourse","type","state","history","form","useForm","location","loading","setloading","isLoading","tutors","isBatchLoading","course","createdCourseId","createdResponse","data","id","imageUrl","setimageUrl","dispatch","selectedcategory","setSelectedCategory","selectedsubcategory","setselectedsubcategory","creatingCourse","setcreatingCourse","categories","setCategories","subcategories","setsubcategories","tncaccepted","settncaccepted","coverImage","setcoverImage","previewCoverImage","setPreviewCoverImage","filteredSubCat","setfilteredSubCat","tags","setTags","currentWizard","setcurrentWizard","batchInfo","setbatchInfo","initWizNo","setinitWizNo","age","setage","keyPoints","setkeyPoints","index","Math","random","name","isEditmode","setIsEditmode","isSchedulemode","setisSchedulemode","editorvalue","seteditorvalue","createEmptyValue","allBatches","setallBatches","finalObj","setfinalObj","courseDetail","setCourseDetail","EventTitle","setEventTitle","days","setdays","isCreationCourse","setisCreationCourse","isCourseCreated","setisCourseCreated","editCourseid","seteditCourseid","canCreateNewBatch","setcanCreateNewBatch","clickedEvent","setclickedEvent","isEventEditMode","setisEventEditMode","currentBatchInfo","setcurrentBatchInfo","updateEvent","setupdateEvent","visible","setVisible","eventStartEndDate","seteventStartEndDate","eventTimeSlot","seteventTimeSlot","batch_type","setbatch_type","batch_day","setbatch_day","end_date","setend_date","end_time","setend_time","enroll_last_date","setenroll_last_date","setname","price","setprice","start_date","setstart_date","start_time","setstart_time","title","settitle","duration","setduration","monthprice","setmonthprice","attendees","setattendees","categoryURL","subCategoryURL","Promise","all","get","then","responses","catch","errors","console","log","getBatchInfo","Object","keys","length","total_price","total_duration","makeid","result","characters","charactersLength","i","push","charAt","floor","join","updateBatch","startDate","endDate","sTime","eTime","format","CourseId","sub_title","handleRTEChange","htmlVal","next","prev","done","e","createNewBatchData","preventDefault","batchDetail","meetingId","lastdate","batchpricepermonth","meeting_room","participants_size","eventId","url","headers","resp","err","isFinished","getObj","val","temp","map","pts","onSelect","alert","getBatches","isEdit","createValueFromString","courseInfo","details_description","isSchedule","key_points","setFieldsValue","detailedDescription","parseInt","category","categorySelected","sub_category","age_limit","a","createFile","image","toDataURL","dataUrl","fileData","dataURLtoFile","uid","status","thumbUrl","response","fetch","blob","metadata","file","File","uploadButton","marginTop","getBase64","img","callback","reader","FileReader","addEventListener","readAsDataURL","beforeUpload","isJpgOrPng","isLt2M","size","resolve","reject","onloadend","onerror","dataurl","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","handleChange","info","originFileObj","cat","tmp","item","CategoryId","is_active","handleAgeChange","redirectToDashboard","handleSubmit","courseTitle","getFieldValue","courseLevel","SpecialDescription","courseLanguage","toString","keypt","userData","userId","localStorage","getItem","point","formData","FormData","append","forEach","removeBatch","content","width","value","display","placeItems","paddingBottom","target","checked","marginLeft","marginRight","course_level","language","special_description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Form, Input, Upload, Select, Checkbox, Spin } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Radio } from \"antd\";\nimport axiosInstance from \"../../config/axoisconfig\";\nimport \"./style.css\";\nimport { BasicFormWrapper } from \"../styled\";\nimport { Button } from \"../../components/buttons/buttons\";\nimport Heading from \"../../components/heading/heading\";\nimport { Cards } from \"../../components/cards/frame/cards-frame\";\nimport { Main } from \"../styled\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  createNewCourse,\n  resetCreationResponse,\n} from \"../../redux/tutor/actionCreator\";\nimport { PageHeader } from \"../../components/page-headers/page-headers\";\nimport EditableTagGroup from \"../../components/tags/index\";\nimport { getCategories } from \"../../redux/categories/actionCreator\";\nimport { editCourse } from \"../../redux/course/actionCreator\";\nimport { useLocation } from \"react-router-dom\";\nimport { Steps } from \"../../components/steps/steps\";\n\nimport Batch from \"./partials/batch\";\nimport { CheckoutWrapper } from \"../ecommerce/Style\";\nimport errorNotification from \"../../components/notification/errorNotification\";\nimport { CustomCalender } from \"../../components/calender/calender\";\nimport DynamicList from \"../../components/dynamicInput/index\";\nimport RichTextEditor from \"react-rte\";\nimport {\n  createBatch,\n  getBatch,\n  deleteBatch,\n  editBatch,\n} from \"../../redux/course/actionCreator\";\nimport { InputNumber } from \"antd\";\nimport getOverlappingDaysInIntervals from \"date-fns/esm/fp/getOverlappingDaysInIntervals/index.js\";\nimport { Fragment } from \"react\";\nwindow.RichTextEditor = RichTextEditor;\n// import localizer from \"react-big-calendar/lib/localizers/globalize\";\n// import globalize from \"globalize\";\nconst { Option } = Select;\nconst { TextArea } = Input;\nvar newCreatedCourseId = \"\";\n// const globalizeLocalizer = localizer(globalize);\nexport const ScheduleCourse = () => {\n  if (\n    document.getElementsByClassName(\"cbtn-next\") &&\n    document.getElementsByClassName(\"cbtn-next\")[0]\n  ) {\n    document.getElementsByClassName(\"cbtn-next\")[0].click();\n  }\n};\n\nconst CreateCourse = ({ type, state }) => {\n  const history = useHistory();\n  const [form] = Form.useForm();\n\n  const location = useLocation();\n  const [loading, setloading] = useState(false);\n  const isLoading = useSelector((state) => state.tutors?.loading);\n  const isBatchLoading = useSelector((state) => state.course?.loading);\n  const createdCourseId = useSelector(\n    (state) => state.tutors?.createdResponse?.data?.id\n  );\n  const [imageUrl, setimageUrl] = useState();\n  const dispatch = useDispatch();\n  const [selectedcategory, setSelectedCategory] = useState(\"\");\n  const [selectedsubcategory, setselectedsubcategory] = useState(\"\");\n  const [creatingCourse, setcreatingCourse] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [subcategories, setsubcategories] = useState([]);\n  const [tncaccepted, settncaccepted] = useState(true);\n  const [coverImage, setcoverImage] = useState(\"\");\n  const [previewCoverImage, setPreviewCoverImage] = useState(\"\");\n  const [filteredSubCat, setfilteredSubCat] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [currentWizard, setcurrentWizard] = useState(1);\n  const [batchInfo, setbatchInfo] = useState([]);\n  const [initWizNo, setinitWizNo] = useState(0);\n  const [age, setage] = useState(\"\");\n  const [keyPoints, setkeyPoints] = useState([\n    {\n      index: Math.random(),\n      name: \"\",\n    },\n  ]);\n  const [isEditmode, setIsEditmode] = useState(false);\n  const [isSchedulemode, setisSchedulemode] = useState(false);\n  const [editorvalue, seteditorvalue] = useState(\n    RichTextEditor.createEmptyValue()\n  );\n  const [allBatches, setallBatches] = useState([]);\n  const [finalObj, setfinalObj] = useState({});\n  const [courseDetail, setCourseDetail] = useState({});\n  const [EventTitle, setEventTitle] = useState(\"\");\n\n  const [days, setdays] = useState(\"\");\n  const [isCreationCourse, setisCreationCourse] = useState(false);\n  const [isCourseCreated, setisCourseCreated] = useState(false);\n  const [editCourseid, seteditCourseid] = useState(\"\");\n  const [canCreateNewBatch, setcanCreateNewBatch] = useState(true);\n  const [clickedEvent, setclickedEvent] = useState(\"\");\n  const [isEventEditMode, setisEventEditMode] = useState(false);\n  const [currentBatchInfo, setcurrentBatchInfo] = useState({});\n  const [updateEvent, setupdateEvent] = useState(false);\n  const [visible, setVisible] = useState(false);\n  //date and time for course creation and edit\n  const [eventStartEndDate, seteventStartEndDate] = useState(\"\");\n  const [eventTimeSlot, seteventTimeSlot] = useState(\"\");\n\n  //state variable for editing the schedule from calender\n  const [batch_type, setbatch_type] = useState(\"value1\");\n  const [batch_day, setbatch_day] = useState([]);\n  const [end_date, setend_date] = useState(\"\");\n  const [end_time, setend_time] = useState(\"\");\n  const [enroll_last_date, setenroll_last_date] = useState(\"\");\n  const [name, setname] = useState(\"\");\n  const [price, setprice] = useState(\"\");\n  const [start_date, setstart_date] = useState(\"\");\n  const [start_time, setstart_time] = useState(\"\");\n  const [title, settitle] = useState(\"\");\n  const [duration, setduration] = useState(\"\");\n  const [monthprice, setmonthprice] = useState(\"\");\n  const [attendees, setattendees] = useState(1);\n\n  useEffect(() => {\n    if (currentWizard === 1) {\n      setisCreationCourse(true);\n    }\n\n    let categories = [];\n    let subcategories = [];\n    const categoryURL = \"https://api-v2.esculae.com/api/v1/course/category\";\n    const subCategoryURL =\n      \"https://api-v2.esculae.com/api/v1/course/sub-category\";\n    Promise.all([\n      axiosInstance.get(categoryURL),\n      axiosInstance.get(subCategoryURL),\n    ])\n      .then((responses) => {\n        categories = responses[0].data;\n        subcategories = responses[1].data;\n        setCategories(categories);\n        setsubcategories(subcategories);\n      })\n      .catch((errors) => {\n        console.log(\"Error in getting api response\", errors);\n      });\n    return () => {\n      // dispatch(resetCreationResponse());\n    };\n  }, []);\n  useEffect(() => {\n    setEventTitle(batchInfo.name || \"\");\n  }, [batchInfo]);\n  useEffect(() => {\n    if (clickedEvent !== \"\") {\n      getBatchInfo(clickedEvent.id);\n    }\n  }, [clickedEvent]);\n  useEffect(() => {\n    if (Object.keys(currentBatchInfo).length > 0) {\n      setisEventEditMode(true);\n      setVisible(true);\n      setbatch_type(currentBatchInfo.batch_type);\n      setbatch_day(currentBatchInfo.batch_day);\n      setend_date(currentBatchInfo.end_date);\n      setend_time(currentBatchInfo.end_time);\n      setenroll_last_date(currentBatchInfo.enroll_last_date);\n      setname(currentBatchInfo.name);\n      setprice(currentBatchInfo.total_price);\n      setstart_date(currentBatchInfo.start_date);\n      setstart_time(currentBatchInfo.start_time);\n      settitle(currentBatchInfo.title);\n      setmonthprice(currentBatchInfo.price);\n      setduration(currentBatchInfo.total_duration);\n    }\n  }, [currentBatchInfo]);\n  const makeid = (length) => {\n    var result = [];\n    var characters = \"abcdefghijklmnopqrstuvwxyz\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result.push(\n        characters.charAt(Math.floor(Math.random() * charactersLength))\n      );\n    }\n    return result.join(\"\");\n  };\n\n  const updateBatch = () => {\n    if (\n      title !== \"\" &&\n      batch_day.length > 0 &&\n      start_date !== \"\" &&\n      start_time !== \"\" &&\n      enroll_last_date !== \"\" &&\n      name !== \"\" &&\n      price !== \"\"\n    ) {\n      let startDate = \"\";\n      let endDate = \"\";\n      let sTime = \"\";\n      let eTime = \"\";\n      if (eventStartEndDate === \"\") {\n        //no update made by useer\n        startDate = currentBatchInfo.start_date;\n        endDate = currentBatchInfo.end_date;\n      } else {\n        //user changed date, manipualte the date accordingly\n        startDate = eventStartEndDate[0].format(\"MM/DD/YYYY\");\n        endDate = eventStartEndDate[1].format(\"MM/DD/YYYY\");\n      }\n      if (eventTimeSlot === \"\") {\n        sTime = currentBatchInfo.start_time;\n        eTime = currentBatchInfo.end_time;\n      } else {\n        sTime = eventTimeSlot[0].format(\"HH:mm\");\n        eTime = eventTimeSlot[1].format(\"HH:mm\");\n      }\n      let data = {\n        CourseId: currentBatchInfo.CourseId,\n        name: name,\n        title: title,\n        sub_title: null,\n        batch_type: batch_type,\n        enroll_last_date: moment(enroll_last_date).format(\"MM/DD/YYYY\"),\n        price: monthprice,\n        start_date: startDate,\n        end_date: endDate,\n        batch_day: batch_day,\n        total_price: price,\n        total_duration: duration,\n        start_time: sTime,\n        end_time: eTime,\n      };\n      dispatch(editBatch(currentBatchInfo.id, data));\n    }\n  };\n  const handleRTEChange = (htmlVal) => {\n    seteditorvalue(htmlVal);\n  };\n  const next = () => {\n    if (currentWizard === 1) {\n      console.log(currentWizard);\n      setcanCreateNewBatch(true);\n    }\n    setcurrentWizard(currentWizard + 1);\n    // onCurrentChange(current, PlaceOrder);\n    // setState({\n    //   ...state,\n    //   status: 'process',\n    //   current: current + 1,\n    // });\n  };\n  const prev = () => {\n    setcurrentWizard(currentWizard - 1);\n\n    // onCurrentChange(current, PlaceOrder);\n    // setState({\n    //   ...state,\n    //   status: 'process',\n    //   current: current - 1,\n    // });\n  };\n\n  const done = (e, createNewBatchData) => {\n    e.preventDefault();\n    if (\n      (createdCourseId || editCourseid) &&\n      (Object.keys(batchInfo).length > 0 ||\n        Object.keys(createNewBatchData).length > 0) &&\n      EventTitle != \"\" &&\n      eventStartEndDate != \"\" &&\n      days &&\n      eventTimeSlot != \"\"\n    ) {\n      let batchDetail = {};\n      if (Object.keys(batchInfo).length > 0) {\n        batchDetail = batchInfo;\n      } else {\n        batchDetail = createNewBatchData;\n      }\n      let meetingId = makeid(8);\n      let data = {\n        CourseId: isSchedulemode === true ? editCourseid : createdCourseId,\n        name: batchDetail.name,\n        title: EventTitle,\n        sub_title: null,\n        batch_type: batchDetail.type === \"Individual\" ? \"value1\" : \"value2\",\n        enroll_last_date: moment(batchDetail.lastdate).format(\"MM/DD/YYYY\"),\n        price: batchDetail.batchpricepermonth,\n        start_date: eventStartEndDate[0].format(\"MM/DD/YYYY\"),\n        end_date: eventStartEndDate[1].format(\"MM/DD/YYYY\"),\n        batch_day: days,\n        start_time: eventTimeSlot[0].format(\"HH:mm\"),\n        end_time: eventTimeSlot[1].format(\"HH:mm\"),\n        total_price: batchDetail.price,\n        total_duration: batchDetail.duration,\n        meeting_room: meetingId,\n        participants_size: attendees,\n      };\n      dispatch(createBatch(data));\n    }\n  };\n  const getBatchInfo = (eventId) => {\n    if (eventId !== \"\") {\n      let url = \"https://api-v2.esculae.com/api/v1/course/batch/\" + eventId;\n      axiosInstance\n        .get(url, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        })\n        .then((resp) => {\n          setcurrentBatchInfo(resp.data);\n        })\n        .catch((err) => {\n          errorNotification(\"Error in getting the batch information\");\n        });\n    }\n  };\n  const isFinished = () => {};\n  const getObj = (val) => {\n    var temp = [];\n    val &&\n      val.map((pts) => {\n        temp.push({\n          index: Math.random(),\n          name: pts,\n        });\n      });\n    setkeyPoints(temp);\n  };\n  const onSelect = () => {\n    alert(\"Selected a date from calender\");\n  };\n  const getBatches = () => {\n    let url = \"https://api-v2.esculae.com/api/v1/course/batch\";\n    axiosInstance\n      .get(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((resp) => {\n        setallBatches(resp.data);\n      })\n      .catch((err) => {\n        console.log(\"Error in getting batches\", err);\n      });\n  };\n\n  useEffect(() => {\n    setIsEditmode(location?.state?.isEdit || false);\n    console.log(\n      \"the data is\",\n      RichTextEditor.createValueFromString(\n        location?.state?.courseInfo?.details_description,\n        \"html\"\n      )\n    );\n    setCourseDetail(location?.state?.courseInfo || {});\n    setisSchedulemode(location?.state?.isSchedule || false);\n    if (location?.state?.isSchedule) {\n      getBatches();\n      seteditCourseid(location?.state?.courseInfo?.id);\n      // dispatch(getBatch());\n      if (\n        document.getElementsByClassName(\"cbtn-next\") &&\n        document.getElementsByClassName(\"cbtn-next\")[0]\n      ) {\n        document.getElementsByClassName(\"cbtn-next\")[0].click();\n      }\n    }\n    setinitWizNo(location?.state?.isSchedule === true ? 1 : 0);\n    getObj(location?.state?.courseInfo?.key_points);\n    //  seteditorvalue(location?.state?.courseInfo?.details_description)\n    form.setFieldsValue({\n      detailedDescription: RichTextEditor.createValueFromString(\n        location?.state?.courseInfo?.details_description,\n        \"html\"\n      ),\n    });\n    seteditorvalue(\n      RichTextEditor.createValueFromString(\n        location?.state?.courseInfo?.details_description,\n        \"html\"\n      )\n    );\n    setSelectedCategory(parseInt(location?.state?.courseInfo?.category || 0));\n    categorySelected(parseInt(location?.state?.courseInfo?.category || 0));\n    setselectedsubcategory(\n      parseInt(location?.state?.courseInfo?.sub_category || 0)\n    );\n    setage(parseInt(location?.state?.courseInfo?.age_limit));\n    setTags(location?.state?.courseInfo?.tags);\n    let a = createFile(\n      \"https://api-v2.esculae.com/\" + location?.state?.courseInfo?.image\n    );\n    toDataURL(\n      \"https://api-v2.esculae.com/\" + location?.state?.courseInfo?.image\n    ).then((dataUrl) => {\n      var fileData = dataURLtoFile(dataUrl, \"imageName.jpg\");\n      setcoverImage(fileData);\n    });\n    setPreviewCoverImage({\n      uid: \"-1\",\n      name: \"preview.png\",\n      status: \"done\",\n      url:\n        \"https://api-v2.esculae.com/\" + location?.state?.courseInfo?.image || \"\",\n      thumbUrl:\n        \"https://api-v2.esculae.com/\" + location?.state?.courseInfo?.image || \"\",\n    });\n    console.log(\"sadasvrdsdc\", location?.state?.courseInfo);\n  }, [location, subcategories]);\n  async function createFile(url) {\n    let response = await fetch(url);\n    let data = await response.blob();\n    let metadata = {\n      type: \"image/jpeg\",\n    };\n    let file = new File([data], \"preview.jpg\", metadata);\n    return file;\n  }\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n  const getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n  };\n\n  const beforeUpload = (file) => {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n    if (!isJpgOrPng) {\n      // message.error(\"You can only upload JPG/PNG file!\");\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      // message.error(\"Image must smaller than 2MB!\");\n    }\n    return isJpgOrPng && isLt2M;\n  };\n  const toDataURL = (url) =>\n    fetch(url)\n      .then((response) => response.blob())\n      .then(\n        (blob) =>\n          new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onloadend = () => resolve(reader.result);\n            reader.onerror = reject;\n            reader.readAsDataURL(blob);\n          })\n      );\n  function dataURLtoFile(dataurl, filename) {\n    var arr = dataurl.split(\",\"),\n      mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n);\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], filename, { type: mime });\n  }\n  const handleChange = (info) => {\n    const isJpgOrPng =\n      info.file.type === \"image/jpeg\" || info.file.type === \"image/png\";\n    const isLt2M = info.file.size / 1024 / 1024 < 2;\n\n    if (!isJpgOrPng) {\n      errorNotification(\"You can only upload JPG/PNG file!\");\n    } else if (!isLt2M) {\n      errorNotification(\"Image must smaller than 2MB!\");\n    } else {\n      setcoverImage(info.file);\n      if (info.file.status === \"uploading\") {\n        setloading(true);\n        return;\n      }\n      if (info.file.status === \"done\") {\n        getBase64(info.file.originFileObj, (imageUrl) => {\n          setloading(false);\n          setimageUrl(imageUrl);\n        });\n      }\n    }\n  };\n  const categorySelected = (cat) => {\n    let tmp = [];\n    console.log(\"cat ius\", cat, subcategories);\n    setSelectedCategory(cat);\n    subcategories?.data?.map((item) => {\n      if (item.CategoryId === cat && item.is_active === true) {\n        tmp.push(item);\n      }\n    });\n    console.log(\" \", tmp);\n    setfilteredSubCat(tmp);\n  };\n  const handleAgeChange = (age) => {\n    setage(age);\n  };\n  const redirectToDashboard = () => {\n    history.push(\"/tutor\");\n  };\n  const handleSubmit = () => {\n    let courseTitle = form.getFieldValue(\"courseTitle\");\n    let courseLevel = form.getFieldValue(\"courseLevel\");\n    // let shortDescription = form.getFieldValue(\"shortDescription\");\n    let SpecialDescription = form.getFieldValue(\"SpecialDescription\");\n    let courseLanguage = form.getFieldValue(\"courseLanguage\");\n    if (tncaccepted === true) {\n      // console.log(\n      //   `the saving info ${courseTitle} - ${selectedcategory} - ${selectedsubcategory} - ${courseLevel} - ${editorvalue} - ${tags} - ${SpecialDescription} - ${age} - ${coverImage}`\n      // );\n      if (\n        courseTitle &&\n        selectedcategory &&\n        selectedsubcategory &&\n        courseLevel &&\n        editorvalue.toString(\"html\") !== \"<p><br></p>\" &&\n        tags &&\n        SpecialDescription &&\n        // &&\n        // age\n        courseLanguage &&\n        coverImage\n      ) {\n        let keypt = [];\n        let userData = {\n          userId: localStorage.getItem(\"currentUserInfo\") || 0,\n        };\n        keyPoints.map((point) => {\n          if (point.name !== \"\") {\n          }\n          keypt.push(point.name);\n        });\n        let formData = new FormData();\n        formData.append(\"title\", courseTitle);\n        formData.append(\"category\", selectedcategory);\n        formData.append(\"sub_category\", selectedsubcategory);\n        formData.append(\"course_level\", courseLevel);\n        formData.append(\"short_description\", \"shortDescription\");\n        formData.append(\"image\", coverImage);\n        formData.append(\"userData\", userData);\n        keypt.forEach((item) => formData.append(\"key_points[]\", item));\n        formData.append(\"details_description\", editorvalue.toString(\"html\"));\n        tags.forEach((item) => {\n          formData.append(\"tags[]\", item);\n        });\n        formData.append(\n          \"created_by\",\n          localStorage.getItem(\"currentUserInfo\") || 0\n        );\n        formData.append(\"special_description\", SpecialDescription);\n        formData.append(\"duration\", duration);\n        formData.append(\"age_limit\", age);\n        formData.append(\"language\", courseLanguage);\n        formData.append(\"is_active\", true);\n        formData.append(\"region_id\", 1);\n        if (isEditmode === false) {\n          setcreatingCourse(true);\n\n          dispatch(createNewCourse(formData, redirectToDashboard));\n        } else {\n          dispatch(editCourse(location?.state?.courseInfo?.id, formData));\n        }\n      } else {\n        errorNotification(\"Please fill all the fields to create a course\");\n      }\n    } else {\n      errorNotification(\"Please accept terms and conditions to proceed\");\n    }\n  };\n  const removeBatch = () => {\n    dispatch(deleteBatch(clickedEvent.id));\n  };\n  return (\n    <Fragment>\n      {isEditmode === false ? (\n        <PageHeader\n          ghost\n          title=\"Create New Course\"\n          buttons={[<div key=\"6\" className=\"page-header-actions\"></div>]}\n        />\n      ) : (\n        <></>\n      )}\n      {isEditmode === false ? (\n        <Main style={{ marginTop: \"-90px\" }}>\n          <Row gutter={15}>\n            <Col md={24}>\n              <Cards headless>\n                <CheckoutWrapper>\n                  <Steps\n                    isswitch\n                    current={0}\n                    status={\"process\"}\n                    steps={[\n                      {\n                        title: \"Course Details\",\n                        content: isLoading ? (\n                          <Col xs={24}>\n                            <div className=\"spin\">\n                              <Spin />\n                            </div>\n                          </Col>\n                        ) : (\n                          <BasicFormWrapper className=\"basic-form-inner\">\n                            <div className=\"atbd-form-checkout\">\n                              <Row justify=\"center\">\n                                <Col sm={22} xs={24}>\n                                  <div className=\"create-account-form\">\n                                    <Heading as=\"h4\">\n                                      Please Fill your Course Information\n                                    </Heading>\n\n                                    <Form\n                                      style={{ width: \"100%\" }}\n                                      form={form}\n                                      name=\"info\"\n                                      onFinish={handleSubmit}\n                                    >\n                                      <>\n                                        <Form.Item\n                                          label=\"Give a Title\"\n                                          name=\"courseTitle\"\n                                          required\n                                        >\n                                          <Input placeholder=\"Course title\" />\n                                        </Form.Item>\n                                        <Row>\n                                          <Col\n                                            lg={11}\n                                            md={11}\n                                            sm={24}\n                                            xs={24}\n                                            xxl={11}\n                                            xl={11}\n                                          >\n                                            <Form.Item\n                                              label=\"Select a Category\"\n                                              name=\"selectCategory\"\n                                              required\n                                            >\n                                              <Select\n                                                placeholder=\"Select a Category\"\n                                                onChange={\n                                                  (value) =>\n                                                    categorySelected(value)\n                                                  // setSelectedCategory(value)\n                                                }\n                                              >\n                                                {categories?.data?.map(\n                                                  (item) => (\n                                                    <Option value={item.id}>\n                                                      {item.name}\n                                                    </Option>\n                                                  )\n                                                )}\n                                              </Select>\n                                            </Form.Item>\n                                          </Col>\n                                          <Col\n                                            lg={1}\n                                            md={1}\n                                            xxl={1}\n                                            xl={1}\n                                          ></Col>\n                                          <Col\n                                            // style={{ marginLeft: \"10px\" }}\n                                            lg={12}\n                                            md={12}\n                                            sm={24}\n                                            xs={24}\n                                            xxl={12}\n                                            xl={12}\n                                          >\n                                            <Form.Item\n                                              label=\"Select a Sub Category\"\n                                              name=\"selectsubCategory\"\n                                              required\n                                            >\n                                              <Select\n                                                placeholder=\"Select a Sub Category\"\n                                                onChange={(value) =>\n                                                  setselectedsubcategory(value)\n                                                }\n                                              >\n                                                {filteredSubCat.map((item) => (\n                                                  <Option value={item.id}>\n                                                    {item.name}\n                                                  </Option>\n                                                ))}\n                                              </Select>\n                                            </Form.Item>\n                                          </Col>\n                                        </Row>\n                                        <br />\n                                        <Form.Item\n                                          label=\"Course Level\"\n                                          name=\"courseLevel\"\n                                          required\n                                        >\n                                          <Radio.Group value={1}>\n                                            <Radio value={1}>Beginner</Radio>\n                                            <Radio value={2}>\n                                              Intermediate\n                                            </Radio>\n                                            <Radio value={3}>Advanced</Radio>\n                                          </Radio.Group>\n                                        </Form.Item>\n                                        {/* <Form.Item\n                                          label=\"Short Description\"\n                                          name=\"shortDescription\"\n                                          required\n                                        >\n                                          <TextArea\n                                            placeholder=\"Short Description\"\n                                            rows={3}\n                                          />\n                                        </Form.Item> */}\n                                        <Form.Item\n                                          label=\"Add Cover Image\"\n                                          name=\"coverImage\"\n                                          required\n                                        >\n                                          {/* <input type=\"file\" onChange={fileChangedHandler1}></input> */}\n                                          <Upload\n                                            name=\"coverImage\"\n                                            listType=\"picture-card\"\n                                            className=\"avatar-uploader\"\n                                            showUploadList={true}\n                                            // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                                            beforeUpload={() => false}\n                                            // beforeUpload={beforeUpload}\n                                            onChange={handleChange}\n                                          >\n                                            {imageUrl ? (\n                                              <img\n                                                src={imageUrl}\n                                                alt=\"avatar\"\n                                                style={{ width: \"100%\" }}\n                                              />\n                                            ) : (\n                                              uploadButton\n                                            )}\n                                          </Upload>\n                                        </Form.Item>\n                                        <Form.Item\n                                          label=\"Detailed Description\"\n                                          name=\"detailedDescription\"\n                                          initialValue={editorvalue}\n                                          required\n                                        >\n                                          <RichTextEditor\n                                            placeholder=\"Type here\"\n                                            value={editorvalue}\n                                            onChange={handleRTEChange}\n                                          />\n                                        </Form.Item>\n                                        <Row>\n                                          <Col\n                                            lg={11}\n                                            md={11}\n                                            sm={24}\n                                            xs={24}\n                                            xxl={11}\n                                            xl={11}\n                                          >\n                                            <Form.Item\n                                              label=\"Age Limit\"\n                                              name=\"ageLimit\"\n                                              required\n                                            >\n                                              {/* <InputNumber\n                                                    type=\"number\"\n                                                    placeholder=\"Please provide age limit\"\n                                                    min={1}\n                                                    max={100}\n                                                  /> */}\n                                              <Select\n                                                style={{ width: 120 }}\n                                                onChange={handleAgeChange}\n                                                placeholder=\"Please provide age limit\"\n                                              >\n                                                <Option value={4}>4+</Option>\n                                                <Option value={8}>8+</Option>\n                                                <Option value={12}>12+</Option>\n                                                <Option value={16}>16+</Option>\n                                                <Option value={18}>\n                                                  18+\n                                                </Option>{\" \"}\n                                                <Option value={22}>22+</Option>{\" \"}\n                                                <Option value={24}>24+</Option>\n                                              </Select>\n                                            </Form.Item>\n                                          </Col>\n                                          <Col\n                                            lg={1}\n                                            md={1}\n                                            xxl={1}\n                                            xl={1}\n                                          ></Col>\n                                          <Col\n                                            lg={12}\n                                            md={12}\n                                            sm={24}\n                                            xs={24}\n                                            xxl={12}\n                                            xl={12}\n                                          >\n                                            <Form.Item\n                                              label=\"Course Language\"\n                                              name=\"courseLanguage\"\n                                              required\n                                            >\n                                              <Input placeholder=\"course language\" />\n                                            </Form.Item>\n                                          </Col>\n                                        </Row>\n                                        <br />\n                                        <Form.Item\n                                          label=\"What you will learn\"\n                                          name=\"learnWhat\"\n                                          required\n                                        >\n                                          <DynamicList\n                                            setkeyPoints={setkeyPoints}\n                                            keyPoints={keyPoints}\n                                          />\n                                          {/*  */}\n                                        </Form.Item>\n                                        <Form.Item\n                                          label=\"Enter Course Related Keyword\"\n                                          name=\"courseReleatedKeyword\"\n                                          required\n                                        >\n                                          <EditableTagGroup\n                                            tag={tags}\n                                            setTags={setTags}\n                                          />\n                                        </Form.Item>\n                                        <Form.Item\n                                          label=\"Special Description\"\n                                          name=\"SpecialDescription\"\n                                          required\n                                        >\n                                          <TextArea\n                                            placeholder=\"Special Description\"\n                                            rows={3}\n                                          />\n                                        </Form.Item>\n                                        <Form.Item required>\n                                          <div\n                                            style={{\n                                              display: \"grid\",\n                                              placeItems: \"center\",\n                                              paddingBottom: \"40px\",\n                                            }}\n                                          >\n                                            <Form.Item\n                                              required\n                                              name=\"acceptTerms\"\n                                            >\n                                              <Checkbox\n                                                value={tncaccepted}\n                                                required\n                                                onChange={(value) =>\n                                                  settncaccepted(\n                                                    value.target.checked\n                                                  )\n                                                }\n                                              >\n                                                Accept Terms and Conditions\n                                              </Checkbox>\n                                            </Form.Item>\n                                            <Button\n                                              htmlType=\"submit\"\n                                              type=\"primary\"\n                                            >\n                                              Create Course\n                                            </Button>\n                                          </div>\n                                        </Form.Item>\n                                      </>\n                                    </Form>\n                                  </div>\n                                </Col>\n                              </Row>\n                            </div>\n                          </BasicFormWrapper>\n                        ),\n                      },\n                      {\n                        title: \"Batch Details\",\n\n                        content: isBatchLoading ? (\n                          <Col xs={24}>\n                            <div className=\"spin\">\n                              <Spin />\n                            </div>\n                          </Col>\n                        ) : (\n                          <Batch\n                            form={form}\n                            isEventEditMode={isEventEditMode}\n                            allBatches={allBatches}\n                            batchInfo={batchInfo}\n                            setbatchInfo={setbatchInfo}\n                            settitle={settitle}\n                            setEventTitle={setEventTitle}\n                            seteventStartEndDate={seteventStartEndDate}\n                            setbatch_day={setbatch_day}\n                            setdays={setdays}\n                            seteventTimeSlot={seteventTimeSlot}\n                            setcanCreateNewBatch={setcanCreateNewBatch}\n                            canCreateNewBatch={canCreateNewBatch}\n                            createBatch={done}\n                            setattendees={setattendees}\n                            attendees={setattendees}\n                            createdCourseId={\n                              isSchedulemode\n                                ? courseDetail?.id\n                                : createdCourseId\n                            }\n                          />\n                        ),\n                      },\n                      // {\n                      //   title: \"Schedule Course\",\n                      //   content: isBatchLoading ? (\n                      //     <Col xs={24}>\n                      //       <div className=\"spin\">\n                      //         <Spin />\n                      //       </div>\n                      //     </Col>\n                      //   ) : (\n                      //     <Fragment>\n                      //       <BasicFormWrapper className=\"basic-form-inner\">\n                      //         <div className=\"atbd-form-checkout\">\n                      //           <Row justify=\"center\">\n                      //             <Col sm={22} xs={24}>\n                      //               <div className=\"create-account-form\">\n                      //                 <Heading as=\"h4\">\n                      //                   3. Schedule your course\n                      //                 </Heading>\n                      //               </div>\n                      //             </Col>\n                      //           </Row>\n                      //         </div>\n                      //         <Row>\n                      //           <CustomCalender\n                      //             onSelect={onSelect}\n                      //             EventTitle={EventTitle}\n                      //             setEventTitle={setEventTitle}\n                      //             eventStartEndDate={eventStartEndDate}\n                      //             seteventStartEndDate={seteventStartEndDate}\n                      //             currentBatchInfo={currentBatchInfo}\n                      //             isEventEditMode={isEventEditMode}\n                      //             visible={visible}\n                      //             setVisible={setVisible}\n                      //             allBatches={allBatches}\n                      //             setclickedEvent={setclickedEvent}\n                      //             duration={duration}\n                      //             setduration={setduration}\n                      //             setmonthprice={setmonthprice}\n                      //             monthprice={monthprice}\n                      //             days={days}\n                      //             getBatchInfo={getBatchInfo}\n                      //             setdays={setdays}\n                      //             eventTimeSlot={eventTimeSlot}\n                      //             seteventTimeSlot={seteventTimeSlot}\n                      //             batch_type={batch_type}\n                      //             batch_day={batch_day}\n                      //             end_date={end_date}\n                      //             end_time={end_time}\n                      //             enroll_last_date={enroll_last_date}\n                      //             name={name}\n                      //             price={price}\n                      //             start_date={start_date}\n                      //             start_time={start_time}\n                      //             title={title}\n                      //             setbatch_type={setbatch_type}\n                      //             setbatch_day={setbatch_day}\n                      //             setend_date={setend_date}\n                      //             setend_time={setend_time}\n                      //             setenroll_last_date={setenroll_last_date}\n                      //             setname={setname}\n                      //             setprice={setprice}\n                      //             setstart_date={setstart_date}\n                      //             setstart_time={setstart_time}\n                      //             settitle={settitle}\n                      //             setisEventEditMode={setisEventEditMode}\n                      //             deleteBatch={removeBatch}\n                      //             editBatch={updateBatch}\n                      //           />\n                      //         </Row>\n                      //       </BasicFormWrapper>\n                      //     </Fragment>\n                      //   ),\n                      // },\n                    ]}\n                    onNext={next}\n                    onPrev={prev}\n                    onDone={(e) => done(e)}\n                    isSchedulemode={isSchedulemode}\n                    // current={curr}\n                  />\n                </CheckoutWrapper>\n              </Cards>\n            </Col>\n          </Row>\n        </Main>\n      ) : (\n        <Row style={{ marginLeft: \"50px\", marginRight: \"50px\" }}>\n          <Col lg={24} xs={24}>\n            <Cards headless>\n              <Row justify=\"center\">\n                <Col xl={10} md={16} xs={24}>\n                  <div className=\"user-info-form\">\n                    <BasicFormWrapper>\n                      <Form\n                        style={{ width: \"100%\" }}\n                        form={form}\n                        name=\"info\"\n                        onFinish={handleSubmit}\n                      >\n                        <div style={{ display: \"grid\", placeItems: \"center\" }}>\n                          <br />\n                          <Heading className=\"form-title\" as=\"h4\">\n                            Update the course details\n                          </Heading>\n                          <br />\n                        </div>\n                        <>\n                          <Form.Item\n                            label=\"Give a Title\"\n                            name=\"courseTitle\"\n                            initialValue={courseDetail?.title || \"\"}\n                          >\n                            <Input placeholder=\"Course title\" />\n                          </Form.Item>\n                          <Row>\n                            <Col\n                              lg={11}\n                              sm={24}\n                              xs={24}\n                              md={11}\n                              xxl={11}\n                              xl={11}\n                            >\n                              <Form.Item\n                                label=\"Select a Category\"\n                                name=\"selectCategory\"\n                                initialValue={parseInt(\n                                  courseDetail?.category || 0\n                                )}\n                              >\n                                <Select\n                                  placeholder=\"Select a Category\"\n                                  onChange={\n                                    (value) => categorySelected(value)\n                                    // setSelectedCategory(value)\n                                  }\n                                >\n                                  {categories?.data?.map((item) => (\n                                    <Option value={item.id}>{item.name}</Option>\n                                  ))}\n                                </Select>\n                              </Form.Item>\n                            </Col>\n                            <Col\n                              lg={1}\n                              md={1}\n                              sm={1}\n                              xs={1}\n                              xxl={1}\n                              xl={1}\n                            ></Col>\n\n                            <Col\n                              lg={12}\n                              md={12}\n                              sm={24}\n                              xs={24}\n                              xxl={12}\n                              xl={12}\n                            >\n                              {console.log(\"edit fisldf\", filteredSubCat)}\n                              <Form.Item\n                                label=\"Select a Sub Category\"\n                                name=\"selectsubCategory\"\n                                initialValue={parseInt(\n                                  courseDetail?.sub_category || 0\n                                )}\n                              >\n                                <Select\n                                  placeholder=\"Select a Sub Category\"\n                                  onChange={(value) =>\n                                    setselectedsubcategory(value)\n                                  }\n                                >\n                                  {filteredSubCat.map((item) => (\n                                    <Option value={item.id}>{item.name}</Option>\n                                  ))}\n                                </Select>\n                              </Form.Item>\n                            </Col>\n                          </Row>\n                          <br />\n                          <Form.Item\n                            label=\"Course Level\"\n                            name=\"courseLevel\"\n                            initialValue={parseInt(\n                              courseDetail?.course_level || 0\n                            )}\n                          >\n                            <Radio.Group value={1}>\n                              <Radio value={1}>Beginner</Radio>\n                              <Radio value={2}>Intermediate</Radio>\n                              <Radio value={3}>Advanced</Radio>\n                            </Radio.Group>\n                          </Form.Item>\n\n                          {/* <Form.Item\n                            label=\"Short Description\"\n                            name=\"shortDescription\"\n                            initialValue={courseDetail?.short_description || \"\"}\n                          >\n                            <TextArea\n                              placeholder=\"Short Description\"\n                              rows={3}\n                            />\n                          </Form.Item> */}\n                          <Form.Item label=\"Add Cover Image\" name=\"coverImage\">\n                            <Upload\n                              name=\"coverImage\"\n                              listType=\"picture-card\"\n                              className=\"avatar-uploader\"\n                              showUploadList={true}\n                              // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                              beforeUpload={() => false}\n                              // beforeUpload={beforeUpload}\n                              onChange={handleChange}\n                              defaultFileList={[previewCoverImage]}\n                              // name=\"coverImage\"\n                              // listType=\"picture-card\"\n                              // className=\"avatar-uploader\"\n                              // showUploadList={false}\n                              // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                              // beforeUpload={beforeUpload}\n                              // onChange={handleChange}\n                            >\n                              {imageUrl ? (\n                                <img\n                                  src={imageUrl}\n                                  alt=\"avatar\"\n                                  style={{ width: \"100%\" }}\n                                />\n                              ) : (\n                                uploadButton\n                              )}\n                            </Upload>\n                          </Form.Item>\n                          {console.log(\n                            \"the value sent for editing is\",\n                            editorvalue\n                          )}\n                          <Form.Item\n                            label=\"Detailed Description\"\n                            name=\"detailedDescription\"\n                            initialValue={editorvalue || \"\"}\n                            required\n                          >\n                            <RichTextEditor\n                              placeholder=\"Type here\"\n                              value={editorvalue}\n                              format={\"html\"}\n                              onChange={handleRTEChange}\n                            />\n                            {/* <TextArea\n                                  placeholder=\"Detailed Description\"\n                                  rows={5}\n                                /> */}\n                          </Form.Item>\n                          <Row>\n                            <Col\n                              lg={11}\n                              sm={24}\n                              xs={24}\n                              md={11}\n                              xxl={11}\n                              xl={11}\n                            >\n                              <Form.Item\n                                label=\"Age Limit\"\n                                name=\"ageLimit\"\n                                required\n                                initialValue={parseInt(\n                                  courseDetail?.age_limit || 0\n                                )}\n                              >\n                                <Select\n                                  style={{ width: 120 }}\n                                  onChange={handleAgeChange}\n                                  placeholder=\"Please provide age limit\"\n                                >\n                                  <Option value={4}>4+</Option>\n                                  <Option value={8}>8+</Option>\n                                  <Option value={12}>12+</Option>\n                                  <Option value={16}>16+</Option>\n                                  <Option value={18}>18+</Option>{\" \"}\n                                  <Option value={22}>22+</Option>{\" \"}\n                                  <Option value={24}>24+</Option>\n                                </Select>\n                                {/* <InputNumber\n                                      type=\"number\"\n                                      placeholder=\"Please provide age limit\"\n                                      min={1}\n                                      max={100}\n                                    /> */}\n                              </Form.Item>\n                            </Col>\n                            <Col\n                              lg={1}\n                              md={1}\n                              sm={1}\n                              xs={1}\n                              xxl={1}\n                              xl={1}\n                            ></Col>\n                            <Col\n                              lg={12}\n                              md={12}\n                              sm={24}\n                              xs={24}\n                              xxl={12}\n                              xl={12}\n                            >\n                              <Form.Item\n                                label=\"Course Language\"\n                                name=\"courseLanguage\"\n                                required\n                                initialValue={courseDetail?.language || \"\"}\n                              >\n                                <Input placeholder=\"course language\" />\n                              </Form.Item>\n                            </Col>\n                          </Row>\n                          <br />\n\n                          <Form.Item\n                            label=\"What you will learn\"\n                            name=\"learnWhat\"\n                          >\n                            <DynamicList\n                              setkeyPoints={setkeyPoints}\n                              keyPoints={keyPoints}\n                            />\n                            {/* <div\n                                  style={{\n                                    display: \"grid\",\n                                    gridTemplateColumns: \"1fr 1fr 1fr\",\n                                    gridGap: \"20px\",\n                                  }}\n                                >\n                                  <Input\n                                    // defaultValue={courseDetail?.key_points[0]||''}\n                                    value={techname1}\n                                    onChange={(e) =>\n                                      settechname1(e.target.value)\n                                    }\n                                    placeholder=\"Skill Name 1\"\n                                  />\n                                  <Input\n                                    // defaultValue={courseDetail?.key_points[1]||''}\n                                    value={techname2}\n                                    onChange={(e) =>\n                                      settechname2(e.target.value)\n                                    }\n                                    placeholder=\"Skill Name 2\"\n                                  />\n                                  <Input\n                                    // defaultValue={courseDetail?.key_points[2]||''}\n                                    value={techname3}\n                                    onChange={(e) =>\n                                      settechname3(e.target.value)\n                                    }\n                                    placeholder=\"Skill Name 3\"\n                                  />\n                                  <Input\n                                    // defaultValue={courseDetail?.key_points[3]||''}\n                                    value={techname4}\n                                    onChange={(e) =>\n                                      settechname4(e.target.value)\n                                    }\n                                    placeholder=\"Skill Name 4\"\n                                  />\n                                  <Input\n                                    // defaultValue={courseDetail?.key_points[4]||''}\n                                    value={techname5}\n                                    onChange={(e) =>\n                                      settechname5(e.target.value)\n                                    }\n                                    placeholder=\"Skill Name 5\"\n                                  />\n                                  <Input\n                                    // defaultValue={courseDetail?.key_points[5]||''}\n                                    value={techname6}\n                                    onChange={(e) =>\n                                      settechname6(e.target.value)\n                                    }\n                                    placeholder=\"Skill Name 6\"\n                                  />\n                                </div> */}\n                          </Form.Item>\n                          <Form.Item\n                            label=\"Enter Course Related Keyword\"\n                            name=\"courseReleatedKeyword\"\n                          >\n                            <EditableTagGroup tag={tags} setTags={setTags} />\n                            {/* <TextArea\n                              placeholder=\"Enter Course Keyword\"\n                              rows={2}\n                            /> */}\n                          </Form.Item>\n                          <Form.Item\n                            label=\"Special Description\"\n                            name=\"SpecialDescription\"\n                            initialValue={\n                              courseDetail?.special_description || \"\"\n                            }\n                          >\n                            <TextArea\n                              placeholder=\"Special Description\"\n                              rows={3}\n                            />\n                          </Form.Item>\n                          <Form.Item>\n                            <div\n                              style={{\n                                display: \"grid\",\n                                placeItems: \"center\",\n                                paddingBottom: \"40px\",\n                              }}\n                            >\n                              <Form.Item required name=\"acceptTerms\">\n                                <Checkbox\n                                  value={tncaccepted}\n                                  required\n                                  onChange={(value) =>\n                                    settncaccepted(value.target.checked)\n                                  }\n                                >\n                                  Accept Terms and Conditions\n                                </Checkbox>\n                              </Form.Item>\n                              <Button\n                                disabled={tncaccepted ? false : true}\n                                htmlType=\"submit\"\n                                type=\"primary\"\n                              >\n                                Update Course\n                              </Button>\n                            </div>\n                          </Form.Item>\n                        </>\n                      </Form>\n                    </BasicFormWrapper>\n                  </div>\n                </Col>\n                <Col span={3} />\n              </Row>\n            </Cards>\n            {/* </div> */}\n          </Col>\n        </Row>\n      )}\n      {/* )} */}\n    </Fragment>\n  );\n};\n\nexport default CreateCourse;\n"]},"metadata":{},"sourceType":"module"}