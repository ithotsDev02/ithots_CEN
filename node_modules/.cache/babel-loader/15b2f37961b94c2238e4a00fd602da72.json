{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nvar _jsxFileName = \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/container/superadmin/AdminListTable/DataTable.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useState, useEffect } from 'react';\nimport { Cards } from '../../../components/cards/frame/cards-frame'; // import { Button } from '../../../components/buttons/buttons';\n\nimport { EditOutlined } from '@ant-design/icons';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport Confirmation from '../ConfirmationBox/index';\n\nconst DataTables = ({\n  handleEditClick,\n  handleDeleteClick,\n  showConfirmation,\n  cancelDelete,\n  deleteUser,\n  admins,\n  isLoading\n}) => {\n  const [state, setState] = useState({\n    selectionType: 'checkbox',\n    selectedRowKeys: null,\n    selectedRows: null,\n    values: {}\n  });\n  const [tblData, settblData] = useState([]);\n  const [cols, setCols] = useState([]);\n  useEffect(() => {\n    let dataSource = [];\n    admins && admins.map(admin => {\n      let tmp = {\n        key: admin.id,\n        name: admin.first_name + ' ' + admin.last_name,\n        email: admin.email,\n        password: admin.password,\n        phonenumber: admin.mobile,\n        editremove: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Button, {\n          type: \"primary\",\n          shape: \"circle\",\n          onClick: () => handleEditClick(admin),\n          icon: /*#__PURE__*/React.createElement(EditOutlined, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 94\n            }\n          }),\n          size: 'small',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(_Button, {\n          style: {\n            marginLeft: '5px'\n          },\n          type: \"primary\",\n          onClick: () => handleDeleteClick(admin.id),\n          shape: \"circle\",\n          icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 126\n            }\n          }),\n          size: 'small',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }\n        }))\n      };\n      dataSource.push(tmp);\n    });\n    let filterObj = [];\n    admins && admins.map(admin => {\n      let tmp = {\n        text: admin.first_name + ' ' + admin.last_name,\n        value: admin.first_name + ' ' + admin.last_name\n      };\n      filterObj.push(tmp);\n    });\n    let data = [{\n      title: 'Name',\n      dataIndex: 'name',\n      filters: filterObj,\n      onFilter: (value, record) => record.name.indexOf(value) === 0,\n      sorter: (a, b) => a.name.length - b.name.length,\n      sortDirections: ['descend']\n    }, {\n      title: 'Email',\n      dataIndex: 'email',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => a.email - b.email\n    }, {\n      title: 'Password',\n      dataIndex: 'password'\n    }, {\n      title: 'PhoneNo',\n      dataIndex: 'phonenumber'\n    }, {\n      title: 'Actions',\n      dataIndex: 'editremove'\n    }];\n    setCols(data);\n    settblData(dataSource);\n  }, [admins]);\n\n  function onChange(pagination, filters, sorter, extra) {\n    setState({ ...state,\n      values: {\n        pagination,\n        filters,\n        sorter,\n        extra\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Col, {\n    xs: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Confirmation, {\n    isModalVisible: showConfirmation,\n    handleOk: deleteUser,\n    handleCancel: cancelDelete,\n    title: \"Delete User\",\n    message: \"Do you want to delete this user ?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Cards, {\n    title: \"List of Admins\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Table, {\n    className: \"table-responsive\",\n    loading: isLoading,\n    pagination: {\n      defaultPageSize: 10,\n      total: tblData.length,\n      showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`\n    },\n    columns: cols,\n    dataSource: tblData,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  })))));\n};\n\n__signature__(DataTables, \"useState{[state, setState]({\\n    selectionType: 'checkbox',\\n    selectedRowKeys: null,\\n    selectedRows: null,\\n    values: {},\\n  })}\\nuseState{[tblData, settblData]([])}\\nuseState{[cols, setCols]([])}\\nuseEffect{}\");\n\nconst _default = DataTables;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(DataTables, \"DataTables\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/container/superadmin/AdminListTable/DataTable.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/ithotsdev02/Downloads/mydownloads/CEN/src/container/superadmin/AdminListTable/DataTable.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/ithotsdev02/Downloads/mydownloads/CEN/src/container/superadmin/AdminListTable/DataTable.js"],"names":["React","useState","useEffect","Cards","EditOutlined","DeleteOutlined","Confirmation","DataTables","handleEditClick","handleDeleteClick","showConfirmation","cancelDelete","deleteUser","admins","isLoading","state","setState","selectionType","selectedRowKeys","selectedRows","values","tblData","settblData","cols","setCols","dataSource","map","admin","tmp","key","id","name","first_name","last_name","email","password","phonenumber","mobile","editremove","marginLeft","push","filterObj","text","value","data","title","dataIndex","filters","onFilter","record","indexOf","sorter","a","b","length","sortDirections","defaultSortOrder","onChange","pagination","extra","defaultPageSize","total","showTotal","range"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Row, Col, Table} from 'antd';\nimport { Cards } from '../../../components/cards/frame/cards-frame';\n// import { Button } from '../../../components/buttons/buttons';\nimport { Button, Radio } from 'antd';\nimport { EditOutlined } from '@ant-design/icons';\nimport { DeleteOutlined} from '@ant-design/icons';\nimport Confirmation from '../ConfirmationBox/index'\n\n\nconst DataTables = ({\n  handleEditClick,\n  handleDeleteClick,\n  showConfirmation,\n  cancelDelete,\n  deleteUser,\n  admins,\n  isLoading,\n}) => {\n  const [state, setState] = useState({\n    selectionType: 'checkbox',\n    selectedRowKeys: null,\n    selectedRows: null,\n    values: {},\n  });\n  const [tblData, settblData] = useState([])\n  const [cols, setCols] = useState([])\n  useEffect(() => {\n    let dataSource = []\n    admins&&admins.map(admin => {\n      let tmp = {\n      key: admin.id,\n      name: admin.first_name+' '+admin.last_name,\n      email: admin.email,\n      password: admin.password,\n      phonenumber:admin.mobile,\n        editremove: <>\n          <Button type=\"primary\" shape=\"circle\" onClick={() => handleEditClick(admin)} icon={<EditOutlined />} size={'small'} />\n          <Button style={{marginLeft:'5px'}} type=\"primary\" onClick={() => handleDeleteClick(admin.id)} shape=\"circle\" icon={<DeleteOutlined />} size={'small'} />\n        </>\n      }\n      dataSource.push(tmp);\n    })\n    let filterObj = []\n    admins && admins.map(admin => {\n      let tmp = {\n          text: admin.first_name+' '+admin.last_name,\n          value: admin.first_name+' '+admin.last_name,\n      }  \n      filterObj.push(tmp)\n        })\n      let data =[{\n        title: 'Name',\n        dataIndex: 'name',\n        filters: filterObj,\n        onFilter: (value, record) => record.name.indexOf(value) === 0,\n        sorter: (a, b) => a.name.length - b.name.length,\n        sortDirections: ['descend'],\n      },\n       {\n      title: 'Email',\n      dataIndex: 'email',\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => a.email - b.email,\n    },{\n      title: 'Password',\n      dataIndex: 'password',\n     \n    },\n       {\n      title: 'PhoneNo',\n      dataIndex: 'phonenumber',\n     \n    }, {\n      title: 'Actions',\n      dataIndex: 'editremove',\n      \n    }\n      ]\n    setCols(data)\n    settblData(dataSource)\n  },[admins])\n  function onChange(pagination, filters, sorter, extra) {\n    setState({ ...state, values: { pagination, filters, sorter, extra } });\n  }\n  return (\n    <>\n        <Row >\n        <Col xs={24}>\n          <Confirmation isModalVisible={showConfirmation}\n            handleOk={ deleteUser } handleCancel = { cancelDelete} title=\"Delete User\" message={ \"Do you want to delete this user ?\"}/>\n            <Cards title=\"List of Admins\">\n              <Table\n                className=\"table-responsive\"\n                loading={isLoading}\n                pagination={{\n                  defaultPageSize: 10,\n                  total: tblData.length,\n                  showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`,\n                }}\n                columns={cols}\n                dataSource={tblData}\n                onChange={onChange}\n              />\n            </Cards>\n          </Col>\n        \n        </Row>\n    </>\n  );\n};\n\nexport default DataTables;\n"]},"metadata":{},"sourceType":"module"}